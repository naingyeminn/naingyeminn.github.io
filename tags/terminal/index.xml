<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title>Terminal on Naing Ye` Minn </title>
      <generator uri="https://hugo.spf13.com">Hugo</generator>
    <link>http://naingyeminn.com/tags/terminal/index.xml/</link>
    <language>en-us</language>
    
    
    <updated>Tue, 04 Aug 2015 00:00:00 UTC</updated>
    
    <item>
      <title>Linux Terminal / Command Line Tricks (2)</title>
      <link>http://naingyeminn.com/posts/linux-command-line-usage-2/</link>
      <pubDate>Tue, 04 Aug 2015 00:00:00 UTC</pubDate>
      
      <guid>http://naingyeminn.com/posts/linux-command-line-usage-2/</guid>
      <description>

&lt;p&gt;Linux/Unix ရဲ့ Bash Shell Terminal မှာ command တွေကို မြန်မြန်ဆန်ဆန် Edit လုပ်နိုင်စေမယ့် Shortcut လေးတွေပါ။ ရိုက်လိုက်တဲ့ command တစ်ကြောင်းမှာ အမှားပါနေလို့ပြန်ပြင်မယ်ဆိုရင် ကိုယ်တွေလုပ်နေကျ သမရိုးကျနည်းလမ်းအတိုင်း Arrow key တွေနဲ့ ရှေ့နောက်ရွှေ့ Delete, Backspace တို့နဲ့ပြန်ဖျက်၊ ပြန်ရေးနဲ့ အချိန်ကြာပါတယ်။ အခုထုတ်နှုတ်ပေးထားတဲ့ Shortcut လေးတွေသိထားမယ်ဆိုရင်တော့ command တွေကို မြန်မြန်ဆန်ဆန်ရိုက်နိုင် ပြင်နိုင်မှာဖြစ်တဲ့အတွက် အလုပ်ပိုတွင်ပါလိမ့်မယ်။ Linux/Unix Admin တွေအနေနဲ့ မဖြစ်မနေ သိထားသင့်တဲ့ Shortcut လေးတွေပဲဖြစ်ပါတယ်။&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;toc_0&#34;&gt;Command Editing Shortcuts&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Control + a&lt;/strong&gt; : Command အစသို့&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Control + e&lt;/strong&gt; : Command အဆုံးသို့&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Control + k&lt;/strong&gt; : Cursor နေရာမှစ၍ Command အဆုံးထိဖျက်&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Control + u&lt;/strong&gt; : Cursor နေရာမှစ၍ Command အစထိဖျက်&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Control + w&lt;/strong&gt; : Cursor နေရာမှစ၍ စာလုံး(Word) အစထိဖျက်&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Control + y&lt;/strong&gt; : လက်တလောဖျက်ထားသော စာလုံး (သို့) Command အား ပြန်ရယူ&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Control + xx&lt;/strong&gt; : Cursor ရှိရာနေရာနှင့် Command အစကြား အပြန်အလှန်သွား&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Alter + b&lt;/strong&gt; : စာလုံးတစ်လုံးစာ နောက်ပြန်ရွှေ့&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Alter + f&lt;/strong&gt; : စာလုံးတစ်လုံးစာ အရှေ့သို့ရွှေ့&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Alter + d&lt;/strong&gt; : Cursor နေရာမှစ၍ စာလုံး(Word) အဆုံးထိဖျက်&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Alter + c&lt;/strong&gt; : စာလုံး၏ပထမအက္ခရာ(Character) အား (သို့) Cursor ရှိရာအက္ခရာအား Capital Letter သို့ပြောင်း&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Alter + u&lt;/strong&gt; : Cursor နေရာမှစ၍ စာလုံးအဆုံးထိ Uppercase သို့ပြောင်း&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Alter + l&lt;/strong&gt; : Cursor နေရာမှစ၍ စာလုံးအဆုံးထိ Lowercase သို့ပြောင်း&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Alter + t&lt;/strong&gt; : Cursor ရှိရာနေရာမှစာလုံး နှင့် ရှေ့စာလုံးနေရာလဲ&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Control + f&lt;/strong&gt; : အက္ခရာ(Character) တစ်လုံးစာ အရှေ့သို့ရွှေ့&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Control + b&lt;/strong&gt; : အက္ခရာတစ်လုံးစာ အနောက်သို့ရွှေ့&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Control + d&lt;/strong&gt; : Cursor ရှိရာနေရာမှ အက္ခရာကိုဖျက်&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Control + h&lt;/strong&gt; : Cursor ရှေ့မှ အက္ခရာကိုဖျက်&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Control + t&lt;/strong&gt; : Cursor ရှိရာနေရာမှအက္ခရာ နှင့် ရှေ့အက္ခရာနေရာလဲ&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;toc_1&#34;&gt;Command Recall &amp;amp; Control Shortcuts&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Control + p&lt;/strong&gt; : Command များ နောက်ပြန်ရှာ&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Control + n&lt;/strong&gt; : Command များ ရှေ့တိုးရှာ&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Alter + .&lt;/strong&gt; : နောက်ဆုံးရိုက်ထားသော Command ၏နောက်ဆုံးစာလုံးအားပြန်ရယူ&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Control + l&lt;/strong&gt; : Terminal Screen ရှင်း&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;strong&gt;Control + c&lt;/strong&gt; : Run နေသော Command အားအဆုံးသတ်&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;Related Post :&lt;/strong&gt; &lt;a href=&#34;http://naingyeminn.com/posts/linux-command-line-usage/&#34;&gt;Linux Terminal / Command Line Tricks (1)&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>NTFSX - Script to enable NTFS Write on Mac OS X</title>
      <link>http://naingyeminn.com/posts/script-to-enable-ntfs-write-on-Mac-OSX/</link>
      <pubDate>Fri, 06 Mar 2015 00:00:00 UTC</pubDate>
      
      <guid>http://naingyeminn.com/posts/script-to-enable-ntfs-write-on-Mac-OSX/</guid>
      <description>&lt;p&gt;Mac OS X User တွေအနေနဲ့ External HDD တွေသုံးတဲ့နေရာမှာ ကြုံရလေ့ရှိတဲ့ အခက်အခဲလေးတစ်ခုပါ။ အဓိကအကြောင်းအရင်းကတော့ Windows ရဲ့ NTFS file system ကို Mac OS X က အပြည့်အဝ အထောက်အပံ့မပေးထားလို့ပါပဲ။ အဲဒါကြောင့် NTFS format သုံးထားတဲ့ External HDD တွေ USB Flash Drive တွေဆိုရင် Read Only သက်သက်သာ အသုံးပြုနိုင်ပါလိမ့်မယ်။ Data တွေကူးထည့်လို့မရနိုင်ပါဘူး။ ဒါပေမယ့် လုံးဝ Write Access မရတာတော့မဟုတ်ပါဘူး။ Mac OS X မှာက Native NTFS support ရှိပါတယ်။ ပြဿနာရှိတာက Apple အနေနဲ့ Microsoft ရဲ့ NTFS ကို Mac OS X မှာ အပြည့်အဝ အသုံးပြုနိုင်အောင် လုပ်ပေးမယ်ဆိုရင် Microsoft ဆီကနေ နည်းပညာ အသုံးပြုခွင့် ဝယ်ယူရပါလိမ့်မယ်။ Microsoft အနေနဲ့လည်း ထိုနည်းလည်ကောင်းပါပဲ။ Apple ရဲ့ HFS ကို Windows မှာအသုံးပြုလို့ရစေနိုင်ဖို့ အသုံးပြုခွင့် လိုအပ်ပါတယ်။ ဒါအမြင်သာဆုံးဖြစ်အောင်သာ နှိုင်းယှဉ်ပြတာပါ။ ဒီလို Patent ပြဿနာက တကယ့်တကယ် ဒီထက် ပိုရှုပ်ထွေးပါတယ်။ အဲဒီလို ညှိနှိုင်းရခက်ခဲတဲ့ ပြဿနာတွေကြောင့် Microsoft ကလည်း HFS ကို Support မလုပ်သလို Apple ကလည်း NTFS ကို လစ်လျှူရှုထားတာပါ။&lt;/p&gt;

&lt;p&gt;တကယ့်တကယ်တော့ Apple အနေနဲ့ Mac OS X မှာ NTFS ကို အသုံးပြုလို့ရနိုင်လောက်အောင် လုပ်ပေးထားပါတယ်။ တရားဝင်သာ Feature တစ်ခုအနေနဲ့ ထည့်သွင်းဖော်ပြမထားတာပါ။ နောက်ပြီး Official Native Support မဟုတ်တဲ့အတွက် Stable ဖြစ်တဲ့အထိ ဂရုတစိုက်လုပ်ပေးမထားပါဘူး။ Mac User တွေအနေနဲ့ NTFS ကို အတတ်နိုင်ဆုံးရှောင်သုံးတာကတော့ အကောင်းဆုံးပါ။ Drive တွေကို ExFAT နဲ့ format ပြန်ချပြီးသုံးတာမျိုးပါ။ NTFS ပဲသုံးချင်တယ်ဆိုရင်တော့ Free ရတဲ့ Third Party Driver &lt;a href=&#34;http://www.macbreaker.com/2014/06/how-to-enable-writing-to-ntfs-hard.html&#34;&gt;NTFS-3G&lt;/a&gt; ရှိပါတယ်။ ဒါလည်းအဆင်ပြေလွန်းလှတယ်ရယ်တော့မဟုတ်ပါဘူး။ Senior ကျတဲ့ Mac User တွေကတော့ Third Party Driver တင်သုံးမယ်ဆိုရင် Free ထက် Commercial Driver တွေဖြစ်တဲ့ &lt;a href=&#34;http://www.paragon-software.com/home/ntfs-mac/download.html&#34;&gt;Paragon&lt;/a&gt; တို့ &lt;a href=&#34;http://www.tuxera.com/&#34;&gt;Tuxera&lt;/a&gt; တို့ဝယ်သုံးတာကိုပဲ Recommend လုပ်ကြပါတယ်။ ပိုပြီး Stable ဖြစ်သလို Data အကူးအပြောင်းလည်း ပိုမြန်တယ်လို့ဆိုကြပါတယ်။ တချို့ကတော့ မဝယ်ပဲ Crack လုပ်ပြီး သုံးကြပါတယ်။&lt;/p&gt;

&lt;p&gt;Crack လည်းမသုံးချင်၊ ဝယ်သုံးဖို့ကလည်းခက်၊ Free ရတဲ့ NTFS-3G ကျတော့လည်း System ထဲ ရှုပ်ထွေးကုန်မှာစိုးတယ်ဆိုရင်တော့ ဘာ Driver မှ Install ထပ်မလုပ်ပဲ သုံးလို့ရမယ့် နည်းလမ်းရှိပါတယ်။ အထက်မှာပြောခဲ့တဲ့ &lt;a href=&#34;http://osxdaily.com/2013/10/02/enable-ntfs-write-support-mac-os-x/&#34;&gt;Native NTFS Support&lt;/a&gt; ကိုသုံးတဲ့နည်းလမ်းပါ။ Stable မဖြစ်ဘူးဆိုကြပေမယ့် လုံးဝသုံးမရတာမျိုးတော့မဟုတ်ပါဘူး။ ဒါပေမယ့် အရမ်းအရေးမကြီးတဲ့ Data၊ Backup ရှိတဲ့ Drive တွေကိုပဲ ဒီနည်းလမ်းနဲ့ သုံးတာပိုစိတ်ချရပါတယ်။ နောက်ပြီး ကိုယ်ပိုင် Drive ကို NTFS format နဲ့ ဒီနည်းအတိုင်း ရေရှည်သုံးတာမျိုးထက် တခြားသူရဲ့ NTFS Drive တွေကို တစ်ခါတစ်လေ အရေးတကြီး Data ကူထည့်ပေးဖို့လိုတာမျိုးတွေလောက်မှာပဲသုံးဖို့ အကြံပေးချင်ပါတယ်။ ကိုယ်ပိုင် Drive တွေကိုတော့ ExFAT Format နဲ့သုံးသင့်ပါတယ်။&lt;/p&gt;

&lt;p&gt;Native NTFS ကိုသုံးတဲ့နည်းကတော့ အသုံးပြုမယ့် NTFS Drive ရဲ့ &lt;strong&gt;Volume Name&lt;/strong&gt; ဒါမှမဟုတ် &lt;strong&gt;UUID&lt;/strong&gt; ကို &lt;code&gt;/etc/fstab&lt;/code&gt; ဆိုတဲ့ system config file ထဲ သတ်မှတ်ထားတဲ့ option တွေအတိုင်း ရေးထည့်ပေးရတာပါ။ ဒီနည်းလမ်းက သာမန် User တွေအတွက် အနည်းငယ် ခက်ခဲကောင်းခက်ခဲပါလိမ့်မယ်။ ဘာလို့လဲဆိုတော့ &lt;strong&gt;fstab&lt;/strong&gt; file ကို Edit လုပ်ဖို့ Root Permission လိုတာရယ်၊ နောက်ပြီး Terminal ကနေ Edit လုပ်ရတာတွေရယ်ကြောင့်ပါ။ ကိုယ်တိုင်လည်း Volume Name တို့ UUID တို့ ရှာရတာတွေ၊ &lt;code&gt;/etc/fstab&lt;/code&gt; ဖိုင်မှာ edit ဝင်လုပ်ရတာတွေကို သိပ်သဘောမကျတဲ့အတွက် နောက်ဆုံး Script လေးတစ်ခုပဲလုပ်လိုက်ပါတယ်။&lt;/p&gt;

&lt;p&gt;ပထမဦးဆုံးလုပ်တဲ့ Script မှာက NTFS Drive တွေကို &lt;strong&gt;fstab&lt;/strong&gt; ထဲ Add လုပ်တာ၊ Remove ပြန်လုပ်တာတွေနဲ့ ပြည့်စုံသလောက်ဖြစ်ပြီးသားပါ။ ဒါပေမယ့် တိုက်တိုက်ဆိုင်ဆိုင် SourceForge မှာ &lt;a href=&#34;http://sourceforge.net/projects/native-ntfs-osx/&#34;&gt;NativeNTFS-OSX&lt;/a&gt; ဆိုတဲ့ Script လေးကို သွားတွေ့ပါတယ်။ ကိုယ်ရေးထားတာထက် ပိုပြီး ပုံစံကျတဲ့အတွက် အဲဒီ Script ကို နမူနာယူပြီး ကိုယ်လိုချင်တဲ့ပုံစံဖြစ်အောင် အသစ် ထပ်လုပ်လိုက်ပါတယ်။ နာမည်ကိုတော့ မှတ်ရလွယ်၊ ရိုက်ရလွယ်မယ့် &lt;strong&gt;NTFSX&lt;/strong&gt; လို့ပဲ ပေးလိုက်ပါတယ်။&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/naingyeminn/ntfsx&#34;&gt;NTFSX&lt;/a&gt; က Connect လုပ်ထားတဲ့ NTFS Drive အားလုံးကို တပြိုင်တည်း ဒါမှမဟုတ် တစ်ခုချင်း Write Access ရအောင်လုပ်ပေးနိုင်ပါတယ်။ နောက်ပြီး Add လုပ်ထားတဲ့ Drive တွေကိုလဲ တစ်ခုချင်း ဒါမှမဟုတ် အကုန်လုံး Remove လုပ်တာမျိုးလဲ လုပ်လို့ရပါတယ်။ NTFSX ကိုသုံးမယ်ဆိုရင်တော့ &lt;strong&gt;Terminal&lt;/strong&gt; ဖွင့်ပြီး ပေးထားတဲ့ Command အတိုင်း တစ်ကြောင်းချင်းစီရိုက်သွင်းသွားရုံပါပဲ။&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ curl -LOk https://github.com/naingyeminn/ntfsx/archive/master.zip
$ unzip master.zip
$ cd ntfsx-master
$ sudo make
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ပြီးပြီဆိုရင်တော့ &lt;strong&gt;Terminal&lt;/strong&gt; အသစ်တစ်ခုမှာ &lt;code&gt;ntfsx&lt;/code&gt; ဆိုတဲ့ command ကို စသုံးနိုင်ပါပြီ။ &lt;strong&gt;root&lt;/strong&gt; access ရဖို့အတွက် &lt;strong&gt;sudo&lt;/strong&gt; command နဲ့တွဲသုံးဖို့တော့လိုပါတယ်။&lt;/p&gt;

&lt;p&gt;ချိပ်ဆက်ထားတဲ့ NTFS Drive အားလုံး Write Access ရချင်တယ်ဆိုရင်တော့ &lt;code&gt;ntfsx&lt;/code&gt; command ကိုပဲသုံးဖို့လိုပါတယ်။&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ sudo ntfsx
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Drive အားလုံးထဲကမှ တချို့ကိုပဲ ရွေးပြီး Write Access ရယူချင်တယ်ဆိုရင်တော့ &lt;code&gt;ntfsx&lt;/code&gt; command ကို &lt;code&gt;-a&lt;/code&gt; သို့မဟုတ် &lt;code&gt;add&lt;/code&gt; option သုံးပြီး Drive number ရွေးနိုင်ပါတယ်။&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ sudo ntfsx -a
(or)
$ sudo ntfsx add
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ရွေးလိုက်တဲ့ Drive ကို အလိုအလျောက် mount လုပ်ပြီး &lt;strong&gt;Finder&lt;/strong&gt; မှာပြပေးပါလိမ့်မယ်။&lt;/p&gt;

&lt;p&gt;ထူးခြားတာက &lt;code&gt;fstab&lt;/code&gt; သုံးပြီး mount လုပ်လိုက်တဲ့ Drive တွေကို &lt;strong&gt;Finder&lt;/strong&gt; ရဲ့ Devices နေရာမှာ မတွေ့ရတော့တာပါ။ အမှန်က Hidden ဖြစ်နေတဲ့ &lt;code&gt;/Volumes/&lt;/code&gt; ဆိုတဲ့ Folder အောက်မှာရှိပါတယ်။ အဲဒီ Folder ကို Access လုပ်ဖို့ကတော့ -&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Finder&lt;/strong&gt; ရဲ့ &lt;strong&gt;Go &amp;gt; Go to Folder&lt;/strong&gt; Menu ဒါမှမဟုတ် &lt;code&gt;Command + Shift + G&lt;/code&gt; Shortcut ကိုသုံးပြီး Go to the Foler ဆိုတဲ့ Box ကို ဖွင့်ပါ။&lt;/li&gt;
&lt;li&gt;Input box ထဲ &amp;ldquo; &lt;strong&gt;/Volumes/&lt;/strong&gt; &amp;ldquo; လို့ရိုက်ထည့်ပြီး &lt;strong&gt;Go&lt;/strong&gt; button ကိုနှိပ်လိုက်ပါ။&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Drive တွေကိုတွေ့ရပါလိမ့်မယ်။&lt;/p&gt;

&lt;p&gt;&lt;code&gt;/etc/fstab&lt;/code&gt; ဖိုင်ထဲ ထည့်သွင်းထားတဲ့ Drive တွေကို ပြန်ထုတ်ချင်တယ်ဆိုရင်တော့ Drive တစ်ခုချင်းရွေးရှင်းဖို့ &lt;code&gt;-r&lt;/code&gt; သို့မဟုတ် &lt;code&gt;remove&lt;/code&gt; option ကိုသုံးနိုင်ပြီး အကုန်ရှင်းချင်တာဆိုရင်တော့ &lt;code&gt;-R&lt;/code&gt; သို့မဟုတ် &lt;code&gt;removeall&lt;/code&gt; option ကိုသုံးနိုင်ပါတယ်။&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ sudo ntfsx -r
(or)
$ sudo ntfsx remove
----
$ sudo ntfsx -R
(or)
$ sudo ntfsx removeall
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Installation ပြုလုပ်ပုံနဲ့ အသုံးပြုပုံတွေကို Download ဆွဲလိုက်တဲ့ Zip ဖိုင်ရဲ့ README ထဲမှာလည်း ဖော်ပြပေးထားပါတယ်။ NTFSX က အထက်မှာပြောခဲ့တဲ့အတိုင်း လုံးဝပြီးပြည့်စုံတဲ့ Solution တစ်ခုတော့ မဟုတ်ဘူးဆိုတာကိုတော့ ထပ်မံ အသိပေးချင်ပါတယ်။&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Github : &lt;a href=&#34;https://github.com/naingyeminn/ntfsx&#34;&gt;NTFSX&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Password Manager in Shell Script</title>
      <link>http://naingyeminn.com/posts/password-manager-in-shell-script/</link>
      <pubDate>Sat, 21 Feb 2015 00:00:00 UTC</pubDate>
      
      <guid>http://naingyeminn.com/posts/password-manager-in-shell-script/</guid>
      <description>&lt;p&gt;ယနေ့ခေတ် Internet အသုံးပြုမှုတွင်ကျယ်လာတာနဲ့အမျှ Google, Facebook, Twitter, Dropbox, Flickr, Instagram&amp;hellip; စသဖြင့် Account ပေါင်း သောင်းခြောက်ထောင်ရဲ့ Password တွေကို အကုန်မှတ်မိဖို့ဆိုတာမလွယ်ပါဘူး။ User Name တူအောင်ပေးထားရင်တောင် Password ကိုတော့ အတူတူမပေးသင့်တာ အားလုံးပဲသိကြမှာပါ။ Password တစ်ခုကို သိတာနဲ့ တခြား account တွေကိုပါဝင်လို့ရသွားနိုင်ပါတယ်။ နောက်ပြီး Password က ရိုးရှင်းနေလို့လဲမဖြစ်ပါဘူး။ လွယ်လွယ်ကူကူရိုးရိုးရှင်းရှင်းပေးထားရင် ကိုယ်ရိုက်လိုက်တဲ့ password ကို တခြားလူကစောင့်ကြည့်တာနဲ့တင် သိသွားနိုင်လို့ပါ။ စိတ်ချရအောင် ရှည်လျားပြီး ရှုပ်ထွေးတဲ့ password တွေကို ခဏခဏပြောင်းပြန်တော့လဲ အဲဒီ password တွေကို မှတ်မိဖို့က ခက်ခဲပါလိမ့်မယ်။ အဲဒါကြောင့် တချို့က &lt;a href=&#34;http://www.keepassx.org/&#34;&gt;Keypass&lt;/a&gt; လို password manager တစ်ခုခုသုံးကြပါတယ်။ Keepass က ကိုယ့်ရဲ့ password တွေကို Database တစ်ခုလုပ်ပြီး သိမ်းထားပေးတာပါ။ လိုအပ်ရင် အဲဒီ Database ကို Keypass နဲ့ဖွင့်ပြီး password ကို clipboard ထဲ အလွယ်တကူ copy ကူးထည့်ပေးပါတယ်။ နောက်ပြီး Password generate လုပ်ပေးတာတွေ password ကို သက်တမ်းသတ်မှတ်ပြီး အဲဒီသက်တမ်းကုန်တာနဲ့ ပြောင်းဖို့အသိပေးတာမျိုးတွေလည်း လုပ်ပေးနိုင်ပါသေးတယ်။ Windows User တွေအတွက်ကတော့ GUI Tool သုံးရတာနှစ်သက်ကြပေမယ့် တချို့ Linux, Mac OSX User တွေကတော့ CLI သုံးရတာကို ပိုပြီးနှစ်သက်ကြပါတယ်။ ကိုယ်တိုင်လဲ Password Manager သုံးချင်ပေမယ့် GUI သေသပ်မှုမရှိတဲ့ KeepassX ကို သိပ်မသုံးချင်ပါဘူး။ Terminal အသုံးများတဲ့သူတွေအတွက် Keepass application ကို သီးသန့်ထပ်ဖွင့်ပြီးသုံးတာထက် ဖွင့်ထားတဲ့ Terminal ကနေပဲ command ရိုက်ပြီး password ရှာတာကပို အဆင်ပြေပါလိမ့်မယ်။ Unix-liked OS တွေ အတွက် &lt;a href=&#34;http://www.passwordstore.org&#34;&gt;Pass&lt;/a&gt; ဆိုတဲ့ CLI tool ရှိပါတယ်။ စိတ်ချရပေမယ့် အနည်းငယ်ရှုပ်ထွေးပါတယ်။ လိုချင်တာက password တွေကို account ID နဲ့တွဲပြီး လွယ်လွယ်ကူကူသိမ်းနိုင်ဖို့ရယ် လွယ်လွယ်ကူကူ access လုပ်နိုင်ဖို့ရယ်ပါ။ ဒါကြောင့် ကိုယ်သိတဲ့ Bash နဲ့ပဲ Script လေးလုပ်ကြည့်ဖြစ်သွားပါတယ်။&lt;/p&gt;

&lt;p&gt;နာမည်ကိုတော့ &lt;a href=&#34;https://github.com/naingyeminn/nympass&#34;&gt;NYMPASS&lt;/a&gt; လို့ပဲ အလွယ်ပေးထားပါတယ်။ ကိုယ့်စိတ်ကြိုက် rename လုပ်ချင်လဲရပါတယ်။ လုံးဝ လုံခြုံစိတ်ချရတယ်လို့တော့ မပြောနိုင်ပေမယ့် ရိုးရှင်းပေါ့ပါးပါတယ်။ ကိုယ့်စိတ်ကူးနဲ့ကိုယ် လိုချင်တဲ့ ပုံစံလုပ်ထားတာပါ။ Password ကိုတော့ ၂ဆင့် encrypt လုပ်ထားပါတယ်။ OpenSSL ကိုသုံးပြီး AES-256 နဲ့ encrypt လုပ်ထားတာပါ။ Keepass လို Database file ကို ဘယ်စက်ကမဆိုဖွင့်လို့ရတာမျိုးတော့မဟုတ်ပါဘူး။ Encrypt လုပ်လိုက်တဲ့ စက်မှာပဲ Decrypt ပြန်လုပ်လို့ရအောင် Password ကို စက်ရဲ့ Network Interface မှာသတ်မှတ်ထားတဲ့ MAC Address (Hardware Address) နဲ့ အလျှင် Encrypt လုပ်ပါတယ်။ ပြီးမှ Passphase တစ်ခုနဲ့ Encrypt ထပ်လုပ်ပြီး ဖိုင်အနေနဲ့ ထုတ်လိုက်တာပါ။ MAC Address ကိုသိရင်တော့ Script မှာ ပြင်ပြီး Decrypt လုပ်လို့ရပါတယ်။ Macbook User တွေအနေနဲ့ Thunderbolt Ethernet Adapter ကို Key တစ်ခုအနေနဲ့သုံးလို့ရအောင် MAC Address နဲ့ Encrypt လုပ်ထားတာပါ။ Passphase ကိုသိရင်တောင် Adapter တပ်မထားရင် ဒါမှမဟုတ် MAC Address မသိရင် password ကို Decrypt လုပ်လို့မရနိုင်အောင်ပါ။ Password တစ်ခုစီအတွက်တော့ File တစ်ခုစီပဲခွဲထုတ်ထားပါတယ်။ ဒီလိုလုပ်ထားတဲ့အတွက် Password ဖိုင်တွေ ပွထသွားစေပေမယ့် Password ကို ထုတ်ယူတဲ့နေရာမှာ command တစ်ခုတည်းနဲ့လွယ်လွယ်ကူကူ Decrypt လုပ်နိုင်စေဖို့အတွက်ပါ။&lt;/p&gt;

&lt;p&gt;Install, Uninstall နဲ့ အသုံးပြုပုံတွေကိုတော့ README ဖိုင်ထဲမှာရေးပေးထားပါတယ်။ Install မလုပ်ခင် Script file ကို Edit လုပ်ဖို့တော့လိုပါတယ်။ Line 5 မှာရှိတဲ့ &lt;code&gt;passpath&lt;/code&gt; ဆိုတဲ့ Password file တွေသိမ်းမယ့် Directory လမ်းကြောင်းရယ်၊ Line 10 က &lt;code&gt;passkey&lt;/code&gt; ရယ်၊ Line 12 က &lt;code&gt;timeout&lt;/code&gt; ရယ်ပါ။ &lt;code&gt;passkey&lt;/code&gt; ကတော့ ကိုယ့်စက်ရဲ့ Network Interface Name ပါ။ &lt;code&gt;ifconfig&lt;/code&gt; ဆိုတဲ့ command သုံးပြီး ရှာနိုင်ပါတယ်။ Linux မှာတော့ eth0, eth1 စတဲ့ နာမည်တွေနဲ့ ဖော်ပြလေ့ရှိပြီး Mac OSX မှာတော့ en0, en1 စသဖြင့် ဖော်ပြလေ့ရှိပါတယ်။ စိတ်ကြိုက် Interface Name တစ်ခုကိုသတ်မှတ်ပေးနိုင်ပါတယ်။ &lt;code&gt;timeout&lt;/code&gt; ကတော့ &lt;code&gt;nympass get&lt;/code&gt; နဲ့ရယူလိုက်တဲ့ password ကို clipboard ထဲမှာထားမယ့် အချိန်ပမာဏပါ။ Default ကတော့ ၅စက္ကန့်သတ်မှတ်ထားပါတယ်။ ၅စက္ကန့် ကြာတာနဲ့ clipboard ထဲရှိနေတဲ့ password ကို ရှင်းပေးပါလိမ့်မယ်။ အဲဒီမတိုင်ခင် ကိုယ် ဝင်မယ့် Site ရဲ့ Login password နေရာမှာ paste လုပ်ဖို့တော့လိုပါတယ်။&lt;/p&gt;

&lt;p&gt;Perfect ဖြစ်တဲ့ Script တစ်ခုမဟုတ်ပေမယ့် လွတ်လပ်စွာ လေ့လာနိုင် ပြင်ဆင်နိုင်ဖို့အတွက် &lt;a href=&#34;https://github.com/naingyeminn/nympass&#34;&gt;Github&lt;/a&gt; မှာ Share ပေးထားပါတယ်။&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Linux Terminal / Command Line Tricks</title>
      <link>http://naingyeminn.com/posts/linux-command-line-usage/</link>
      <pubDate>Sun, 03 Aug 2014 00:00:00 UTC</pubDate>
      
      <guid>http://naingyeminn.com/posts/linux-command-line-usage/</guid>
      <description>

&lt;p&gt;Linux User တွေအနေနဲ့ သိထားသင့်တဲ့ Terminal အသုံးပြုပုံလေးတွေပါ။ အပြည့်အစုံကြီး မဟုတ်ပေမယ့် အသုံးဝင်တဲ့ နည်းလမ်းလေးတချို့ကိုပဲ အသုံးများတဲ့ Ubuntu ပေါ်အခြေခံပြီး အဓိကထားမျှဝေလိုက်ပါတယ်။&lt;/p&gt;

&lt;h1 id=&#34;toc_0&#34;&gt;Shortcuts&lt;/h1&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;pre&gt;
&lt;table cellpadding=5&gt;
&lt;tr&gt;
    &lt;td width=&#34;50%&#34;&gt;Terminal အသစ်ဖွင့်&lt;/td&gt;
    &lt;td width=&#34;50%&#34;&gt;Control + Alter + T&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Tab အသစ်ဖွင့်&lt;/td&gt;
    &lt;td&gt;Control + Shift + T&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Zoom In (စာလုံးကြီး)&lt;/td&gt;
    &lt;td&gt;Control +  Shift + = (Control + +)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Zoom Out (စာလုံးသေး)&lt;/td&gt;
    &lt;td&gt;Control + -&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Copy&lt;/td&gt;
    &lt;td&gt;Control + Shift + C&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Paste&lt;/td&gt;
    &lt;td&gt;Control + Shift + V&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Command အစသို့&lt;/td&gt;
    &lt;td&gt;Control + A&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
    &lt;td&gt;Command ဖျက်&lt;/td&gt;
    &lt;td&gt;Control + U&lt;/td&gt;
&lt;/tr&gt;&lt;/p&gt;

&lt;p&gt;&lt;/table&gt;&lt;/p&gt;

&lt;h2 id=&#34;toc_1&#34;&gt;&lt;/pre&gt;&lt;/h2&gt;

&lt;h3 id=&#34;toc_2&#34;&gt;Command Completion&lt;/h3&gt;

&lt;p&gt;Ubuntu ရဲ့ Terminal မှာ ကိုယ်ရိုက်လိုက်တဲ့ command ရဲ့ စာလုံး အပြည့်အစုံကို &lt;code&gt;Tab&lt;/code&gt; key ၂ချက်နှိပ်ပြီး ဖြည့်နိုင်ပါတယ်။ ဥပမာအနေနဲ့ &lt;code&gt;apt&lt;/code&gt; လို့ရိုက်ပြီး &lt;code&gt;Tab&lt;/code&gt;key ၂ချက်နှိပ်လိုက်မယ်ဆိုရင် ပုံမှာပြထားတဲ့အတိုင်း apt နဲ့စတဲ့ command တွေပြပေးပါလိမ့်မယ်။ &lt;code&gt;i&lt;/code&gt; တစ်လုံးထပ်တိုးပြီး (&lt;code&gt;apti&lt;/code&gt;) &lt;code&gt;Tab&lt;/code&gt; ထပ်နှိပ်ပါက &lt;code&gt;aptitude&lt;/code&gt; ဆိုပြီး ဖြည့်ပေးသွားမှာပါ။ Command အစစာလုံး တစ်လုံး နှစ်လုံးရိုက်ပြီး &lt;code&gt;Tab&lt;/code&gt; နှိပ်တာနဲ့ အဲဒီ စာလုံးနဲ့စတဲ့ Command ကိုပြပေးသွားတာဖြစ်ပါတယ်။&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ apt[tab][tab]
$ apti[tab][tab]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://dl.dropboxusercontent.com/u/26716001/Ubuntu/ScreenShots/Screenshot%20from%202014-08-01%2016%3A04%3A26.png&#34; alt=&#34;Completion&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;Directory လမ်းကြောင်းတွေမှာလဲသုံးနိုင်ပါတယ်။&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ cd Do[tab][tab]
$ cd Dow[tab][tab]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://dl.dropboxusercontent.com/u/26716001/Ubuntu/ScreenShots/Screenshot%20from%202014-08-01%2016%3A45%3A01.png&#34; alt=&#34;Directory Completion&#34; /&gt;
&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;မှတ်ချက်။ ။ တချို့ Distro တွေမှာတော့ Completion အလုပ်လုပ်ဖို့ configure ပြန်လုပ်ပေးဖို့ လိုပါတယ်။&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;toc_3&#34;&gt;History&lt;/h3&gt;

&lt;p&gt;Terminal ထဲ ရိုက်ထားတဲ့ command တွေကိုတော့ keyboard က &lt;code&gt;Up Arrow&lt;/code&gt; key နှိပ်ပြီး ပြန်ခေါ်သုံးနိုင်ပါတယ်။ အကယ်၍များ ရိုက်ဖူးတဲ့ command တစ်ခုကို အပြည့်အစုံမမှတ်မိခဲ့ရင် &lt;code&gt;history&lt;/code&gt; command သုံးပြီး ပြန်ရှာနိုင်ပါတယ်။ ပုံမှာပါတဲ့အတိုင်း &lt;code&gt;history | grep&lt;/code&gt; နဲ့တွဲပြီး ကိုယ်ရှာချင်တဲ့ command မှာပါတဲ့ စာသာတချို့ ရိုက်ထည့်ပေးရမှာပါ။&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ history | grep [some_part_of_command]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://dl.dropboxusercontent.com/u/26716001/Ubuntu/ScreenShots/Screenshot%20from%202014-08-01%2017%3A05%3A40.png&#34; alt=&#34;History&#34; /&gt;
&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;toc_4&#34;&gt;! - Bang&lt;/h3&gt;

&lt;p&gt;နောက်ဆုံးရိုက်ခဲ့တဲ့ command ကိုပြန်ခေါ်ချင်တယ်ဆိုရင်တော့ &lt;strong&gt;!!&lt;/strong&gt; ကိုသုံးနိုင်ပါတယ်။&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ gedit /tmp/test
$ !!
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ဥပမာပြထားတဲ့အတိုင်း ပထမ ရိုက်လိုက်တဲ့ &lt;em&gt;&amp;ldquo;gedit /tmp/test&amp;rdquo;&lt;/em&gt; ဆိုတဲ့ command ကိုပြန် ခေါ်ချင်တယ်ဆိုရင် အပြည့်အစုံ ပြန်ရိုက်စရာမလိုပါဘူး။ &lt;strong&gt;!!&lt;/strong&gt; လို့ရိုက်လိုက်တာနဲ့ &lt;em&gt;&amp;ldquo;gedit /tmp/test&amp;rdquo;&lt;/em&gt; ဆိုတဲ့ command ပြန်ရိုက်ပြီးသားဖြစ်သွားမှာပါ။&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ gedit /tmp/test
$ cd ~/Download
$ !ge
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://dl.dropboxusercontent.com/u/26716001/Ubuntu/ScreenShots/Screenshot%20from%202014-08-01%2019%3A06%3A29.png&#34; alt=&#34;bang&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;gedit command သုံးပြီးတဲ့နောက် Home အောက်က Download ဆိုတဲ့ folder ထဲကို ပြောင်းတဲ့ command ရိုက်လိုက်ပါတယ်။ &lt;strong&gt;!!&lt;/strong&gt; လို့ရိုက်ရင်တော့ &lt;em&gt;&amp;ldquo;cd ~/Download&amp;rdquo;&lt;/em&gt; ဆိုတဲ့ command ကို ပြန်ခေါ်တာဖြစ်သွားပါလိမ့်မယ်။ ပြထားတဲ့အတိုင်း &lt;strong&gt;!ge&lt;/strong&gt; လို့ရိုက်လိုက်ရင်တော့ History ထဲက &lt;strong&gt;ge&lt;/strong&gt; နဲ့စတဲ့ command တွေထဲကမှ နောက်ဆုံး command ကိုပြန်ခေါ်ပေးမှာပါ။ &lt;em&gt;&amp;ldquo;gedit /tmp/test&amp;rdquo;&lt;/em&gt; လို့ပြန်ရိုက်လိုက်တာနဲ့အတူတူပါပဲ။&lt;/p&gt;

&lt;p&gt;အကယ်၍များ ရိုက်လိုက်တဲ့ command တစ်ခုက root permission လိုခဲ့မယ်ဆိုရင်လဲ အကုန်ပြန်ရိုက်စရာမလိုပါဘူး။ &lt;strong&gt;sudo !!&lt;/strong&gt; လို့ပဲရိုက်စရာလိုပါတယ်။&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ apt-get update
$ sudo !!
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;https://dl.dropboxusercontent.com/u/26716001/Ubuntu/ScreenShots/Screenshot%20from%202014-08-01%2017%3A35%3A56.png&#34; alt=&#34;sudo&#34; /&gt;
&lt;/p&gt;

&lt;p&gt;ပုံမှာပြထားတဲ့အတိုင်း ပထမ &lt;em&gt;apt-get update&lt;/em&gt; လို့ရိုက်လိုက်ပါတယ်။ root permission လိုတယ်ဆိုပြီး error ပြလာတဲ့အတွက် &lt;strong&gt;sudo&lt;/strong&gt; command နဲ့ &lt;em&gt;&amp;ldquo;sudo apt-get update&amp;rdquo;&lt;/em&gt; ဆိုပြီးပြန်ရိုက်ရမှာပါ။ ဒါပေမယ့် အပြည့်အစုံပြန်မရိုက်ပဲ &lt;strong&gt;sudo !!&lt;/strong&gt; ကိုသုံးလိုက်တာပါ။ အပေါ်မှာပြောခဲ့တဲ့အတိုင်း &lt;strong&gt;!!&lt;/strong&gt; က နောက်ဆုံးရိုက်လိုက်တဲ့ command ကိုပြန်ခေါ်ပေးတာပါ။ ဒါကြောင့် &lt;strong&gt;sudo !!&lt;/strong&gt; လို့ရိုက်လိုက်တာက &lt;strong&gt;sudo apt-get update&lt;/strong&gt; လို့ရိုက်လိုက်တာနဲ့ အတူတူဖြစ်သွားပါတယ်။&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;!?&lt;/strong&gt; ကိုတော့ ရိုက်ဖူးတဲ့ command တွေထဲကမှ သတ်မှတ်ထားတဲ့ စာသားပါတဲ့ command ကိုပြန်ခေါ်တဲ့အခါသုံးနိုင်ပါတယ်။&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ gedit /tmp/test
$ gedit ~/Documents/test
$ !?mp
$ !?men
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;!&lt;/strong&gt; ကို တခြား သုံးလို့ရတာလေးတွေရှိပါသေးတယ်။ သိပ် အသုံးမဝင်ပေမယ့် သိထားရအောင်ပါ။ အောက်မှာပြထားတဲ့အတိုင်း အစဉ်လိုက် ရိုက်ပြီး စမ်းကြည့်ပါ။ &lt;em&gt;sudo apt-get upgrade&lt;/em&gt; ရိုက်လိုက်လို့ password ဒါမှမဟုတ် Yes/No မေးလာခဲ့ရင် ဆက်မသွားပဲ Control+C နှိပ်ပြီး cancel လုပ်နိုင်ပါတယ်။ ပြီးမှ &lt;strong&gt;!&lt;/strong&gt; နဲ့စတဲ့ command ကို ဆက်ရိုက်ပါ။&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ !1
$ !2
$ sudo apt-get upgrade
$ !:0
$ sudo apt-get upgrade
$ !:1
$ sudo apt-get upgrade
$ !:-1
$ sudo apt-get upgrade
$ !:-2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ရလာမယ့် result တွေကတော့&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;!1&lt;/strong&gt; =&amp;gt; History ထဲမှ ထမဦးဆုံး command ပါ။ &lt;strong&gt;history | more&lt;/strong&gt; ဆိုတဲ့ command နဲ့ စစ်ကြည့်နိုင်ပါတယ်။&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;!2&lt;/strong&gt; =&amp;gt; History ထဲမှ ဒုတိယ command ပါ။&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;!:0&lt;/strong&gt; =&amp;gt; နောက်ဆုံးရိုက်ထားသော command (&lt;em&gt;sudo apt-get upgrade&lt;/em&gt;) ရဲ့ ပထမဆုံး အပိုင်း &lt;strong&gt;sudo&lt;/strong&gt; ကိုတွေ့ရပါလိမ့်မယ်။&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;!:1&lt;/strong&gt; =&amp;gt; &lt;em&gt;sudo apt-get upgrade&lt;/em&gt; ရဲ့ ဒုတိယအပိုင်း &lt;strong&gt;apt-get&lt;/strong&gt; ကိုတွေ့ရပါလိမ့်မယ်။&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;!:-1&lt;/strong&gt; =&amp;gt; &lt;em&gt;sudo apt-get upgrade&lt;/em&gt; ရဲ့ရှေ့ ၂ပိုင်း &lt;strong&gt;sudo apt-get&lt;/strong&gt; ကိုတွေ့ရမှာပါ။&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;!:-2&lt;/strong&gt; =&amp;gt; &lt;strong&gt;!!&lt;/strong&gt; ရိုက်လိုက်သလိုပါပဲ &lt;strong&gt;sudo apt-get upgrade&lt;/strong&gt; အပြည့်အစုံ ပြန်မြင်ရပါလိမ့်မယ်။&lt;/p&gt;

&lt;p&gt;Command ရှည်ရင်ရှည်သလို &lt;strong&gt;!:&lt;/strong&gt; နောက်က နံပါတ်ကို တိုးသွားနိုင်ပါတယ်။ &lt;strong&gt;!2:1&lt;/strong&gt; &lt;strong&gt;!2:-1&lt;/strong&gt; စသဖြင့်လဲ ပေါင်းစပ်ရေးသားနိုင်ပါသေးတယ်။&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;နောက်ဆုံးရိုက်ခဲ့တဲ့ command ရဲ့ Parameter တွေလိုချင်ရင်&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ !!*
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;နောက်ဆုံးရိုက်ခဲ့တဲ့ command ရဲ့ ပထမဆုံး Parameter ကိုလိုချင်ရင်&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ !!^
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;နောက်ဆုံးရိုက်ခဲ့တဲ့ command ရဲ့ နောက်ဆုံး Parameter ကိုလိုချင်ရင်&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ !!$
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;နောက်ဆုံးရိုက်ခဲ့တဲ့ command ရဲ့ ဒုတိယမြောက် Parameter ကိုလိုချင်ရင်&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ !!2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;!!:p&lt;/strong&gt; ဆိုတာရှိပါသေးတယ်။ &lt;strong&gt;!!&lt;/strong&gt; နဲ့ကွာခြားတာက &lt;strong&gt;!!&lt;/strong&gt; က နောက်ဆုံး command ကို တန်း run ပေးတာဖြစ်ပြီး &lt;strong&gt;!!:p&lt;/strong&gt; က စာသား ရိုက်ထုတ်ပေးရုံသက်သက်ပဲဖြစ်ပါတယ်။&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ !!:p
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;နောက်ဆုံးရိုက်ထားတဲ့ command ကိုမှ စာသားတချို့ အစားထိုးချင်တယ်ဆိုရင်တော့ &lt;strong&gt;!!:s&lt;/strong&gt; ကိုသုံးနိုင်ပါတယ်။&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;!!:s/[ပြင်လိုသည့်စာသား]/[ပြင်မည့်စာသား]/&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;ပြထားတဲ့ format အတိုင်း ရိုက်ပြီး ပြင်နိုင်ပါတယ်။&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ sudo apt-get update
$ !!:s/date/grade
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ဥပမာထဲကအတိုင်းဆိုရင်တော့ ပထမရိုက်ထားတဲ့ &lt;strong&gt;sudo apt-get update&lt;/strong&gt; ဆိုတဲ့ စာသားကို &lt;strong&gt;sudo apt-get upgrade&lt;/strong&gt; ဆိုပြီးပြောင်းပေးသွားမှာပါ။ &lt;em&gt;update&lt;/em&gt; ရဲ့ &lt;strong&gt;date&lt;/strong&gt; ဆိုတဲ့ နေရာမှာ &lt;strong&gt;grade&lt;/strong&gt; ဆိုတဲ့ စာသားအစားထိုးပြီး &lt;strong&gt;upgrade&lt;/strong&gt; လို့ ပြင်လိုက်တာပါ။&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;toc_5&#34;&gt;Calculator&lt;/h3&gt;

&lt;p&gt;Terminal မှာ ပေါင်း၊ နှုတ်၊ မြောက်၊ စား လုပ်ချင်တယ်ဆိုရင်တော့&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;$ echo $[(10+10+5)*2]
$ 50
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;တခြားအသုံးဝင်မယ့် နည်းလမ်းလေးတွေလည်း ဆက်လက်ရေးသားပါဦးမယ်။&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;Related Post:&lt;/strong&gt; &lt;a href=&#34;http://naingyeminn.com/posts/linux-command-line-usage-2/&#34;&gt;Linux Terminal / Command Line Tricks (2)&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Tips for Ubuntu-MM</title>
      <link>http://naingyeminn.com/posts/tips-for-ubuntu-mm/</link>
      <pubDate>Thu, 03 Jul 2014 00:00:00 UTC</pubDate>
      
      <guid>http://naingyeminn.com/posts/tips-for-ubuntu-mm/</guid>
      <description>

&lt;h3 id=&#34;toc_0&#34;&gt;&lt;strong&gt;$&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;Terminal မှ User ၏ Command Prompt ကိုဆိုလိုခြင်းဖြစ်သည်။ Online မှ Blog များ Tutorial များတွင် Command များကိုဖော်ပြရာ၌ ထည့်သွင်းဖော်ပြလေ့ရှိသည်။ သို့သော် ထို Command အား ကူးယူ အသုံးပြုရာတွင် ထည့်သွင်းအသုံးပြုစရာမလိုပါ။ &lt;code&gt;$ sudo apt-get update&lt;/code&gt; ဟုဖော်ပြထားပါက &lt;code&gt;sudo apt-get update&lt;/code&gt; ဆိုသော command  သာကူယူအသုံးပြုရန်လိုအပ်သည်။&lt;/p&gt;

&lt;p&gt;&lt;code&gt;$&lt;/code&gt; အား စာလုံးတစ်ချို့နှင့် ကပ်၍အသုံးပြုထားပါက shell variable အဖြစ် သတ်မှတ်ထားသည်ကို ပြန်လည်ခေါ်ယူ အသုံးပြုခြင်းဖြစ်သည်။&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ var=&amp;quot;Hello&amp;quot;
$ echo $var
Hello
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;အဆိုပါဥပမာရှိ line တစ်ခုချင်း၏ ရှေ့တွင်တွေ့ရသော &lt;code&gt;$&lt;/code&gt; သည် Command Prompt ကိုဆိုလိုခြင်းဖြစ်ပြီး ဒုတိယ line တွင်ပြထားသော $var သည် shell variable ကိုဆိုလိုခြင်းဖြစ်သည်။&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;toc_1&#34;&gt;&lt;strong&gt;#&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;$&lt;/code&gt; ကဲသို့ပင် Command များ၏ရှေ့တွင်　ေဖာ်ပြလေ့ရှိသည်။ &lt;code&gt;root user&lt;/code&gt; &lt;code&gt;super user&lt;/code&gt; အနေဖြင့် အသုံးပြုထားသော Terminal ၏ Command Prompt ကိုဆိုလိုခြင်းဖြစ်သည်။ သာမန် User Prompt &lt;code&gt;$&lt;/code&gt; မှ Root User Prompt &lt;code&gt;#&lt;/code&gt; သို့ ပြောင်းလိုပါက - &lt;code&gt;sudo -s&lt;/code&gt; command ဖြင့်ပြောင်းနိုင်သည်။&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ sudo -s
[sudo] password for user: 
# 
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;toc_2&#34;&gt;&lt;strong&gt;~/&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;သင်၏ &lt;code&gt;Home Directory&lt;/code&gt; ကိုဆိုလိုခြင်းဖြစ်သည်။ တနည်းအားဖြင့် &lt;code&gt;/home/yourname&lt;/code&gt; နှင့်တူညီသည်။&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ cd ~/
$ cd /home/yourname
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;toc_3&#34;&gt;&lt;strong&gt;./&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;Terminal တွင် သင်ရောက်ရှိနေသော လက်ရှိ Directory ကို ဆိုလိုသည်။ Executable file များကို terminal မှတဆင့် run သောအခါတွင်အသုံးပြုလေ့ရှိသည်။ ဥပမာတွင်ပြထားသည်မှာ လက်ရှိ ရောက်ရှိနေသော Directory ထဲမှ script ဆိုသော Executable File ကို run လိုက်ခြင်းဖြစ်သည်။&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ ./script
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;toc_4&#34;&gt;&lt;strong&gt;.&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;File သို့မဟုတ် Folder တို့၏ အမည်ရှေ့တွင် &lt;code&gt;.&lt;/code&gt; ထည့်ပါက ထို File/Folder သည် File Manager ထဲတွင်သာမန်အားဖြင့် မြင်ရမည်မဟုတ်ပါ။ ထို File/Folder များအား File Manager တွင် မြင်နိုင်စေရန် &lt;code&gt;Control + H&lt;/code&gt; Key အား နှိပ်၍ ဖော်နိုင်သည်။ အများအားဖြင့် System Configuration file များ folder များတွင်အသုံးပြုလေ့ရှိသည်။ User ၏ Home Directory &lt;code&gt;~/&lt;/code&gt; ထဲတွင် &lt;code&gt;.local&lt;/code&gt;, &lt;code&gt;.config&lt;/code&gt; စသဖြင့်တွေ့နိုင်သည်။&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;toc_5&#34;&gt;&lt;strong&gt;sudo&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;root&lt;/code&gt; တနည်းအားဖြင့် &lt;code&gt;super&lt;/code&gt; user အနေဖြင့် command များ executable file များအား run သောအခါတွင် သုံးသည်။ Windows တွင် Administrator အနေဖြင့် အသုံးပြုသည်နှင့် တူညီသည်။&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;toc_6&#34;&gt;Command, Option and Parameter&lt;/h3&gt;

&lt;p&gt;Terminal တွင်း အသုံးပြုသော command များသည် အများအားဖြင့် လက်ရှိရောက်ရှိနေသော Directory နှင့် အတွင်းရှိ File/Folder များတွင်သာ သက်ရောက်သည်။ အထူးထပ်မံဖြည့်စွက်လိုက်သော Options များ Parameter များပေါ်မူတည်၍သာ အပြောင်းအလဲများရှိသည်။ ဥပမာပြရလျှင် &lt;code&gt;ls&lt;/code&gt; command သည် လက်ရှိရောက်ရှိနေသော Directory ထဲမှ File/Folder စာရင်းကို ပြပေးသည်။ &lt;code&gt;ls /usr/share&lt;/code&gt; ဟူ၍ parameter အနေဖြင့် Directory Path &lt;code&gt;/usr/share&lt;/code&gt; ကိုထည့်ပါက ထို Directory ထဲမှ File/Folder များကိုပြပေးမည်ဖြစ်သည်။&lt;/p&gt;

&lt;p&gt;Blog များ Tutorial များတွင်ဖော်ပြထားသော Linux Command များအား ကူးယူအသုံးပြုရာတွင် Error များ တက်နိုင်ပါသည်။ အချို့ Command များမှာ မိမိ Install ပြုလုပ်မထားခြင်းကြောင့် ဖြစ်နိုင်သလို ကူယူရာတွင် text format လွဲချော်ခြင်းကြောင့်လဲဖြစ်နိုင်ပါသည်။&lt;/p&gt;

&lt;p&gt;Command များသည် အများအားဖြင့် အောက်ပါ format အတိုင်းရှိတတ်ပါသည်။&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ wget -O skype-ubuntu-current_i386.deb http://www.skype.com/go/getskype-linux-beta-ubuntu-32
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;အဆိုပါစာကြောင်းတွင် &lt;code&gt;wget&lt;/code&gt; သည် Internet ရှိ File များအား terminal မှတဆင့် Download ပြုလုပ်ရာတွင်သုံးသော command တစ်ခုဖြစ်သည်။ &lt;code&gt;-O&lt;/code&gt; သည် command ၏ Option ဖြစ်သည်။ Download ဆွဲလိုက်သော file အား နာမည်တစ်ခုဖြင့် ပြောင်းလဲစေလိုလျှင်သုံးပါသည်။ &lt;code&gt;-O&lt;/code&gt; နောက်တွင်ရှိသော &lt;code&gt;skype-ubuntu-current_i386.deb&lt;/code&gt; သည် ပြောင်းလဲလိုသော File နာမည်ဖြစ်ပြီး ၄င်း၏နောက်ရှိ &lt;code&gt;http://www.skype.com/go/getskype-linux-beta-ubuntu-32&lt;/code&gt; သည် Download ပြုလုပ်မည့် File ရှိရာလမ်းကြောင်း (Link) ဖြစ်သည်။ ထို အစိတ်အပိုင်းတစ်ခုစီ၏ ကြားတွင် Space ခြားထားသည်ကို သတိပြုရန်လိုအပ်သည်။&lt;/p&gt;

&lt;p&gt;&amp;ldquo;wget &lt;code&gt;space&lt;/code&gt; -O &lt;code&gt;space&lt;/code&gt; skype-ubuntu-current_i386.deb &lt;code&gt;space&lt;/code&gt; &lt;a href=&#34;http://www.skype.com/go/getskype-linux-beta-ubuntu-32&amp;quot;&#34;&gt;http://www.skype.com/go/getskype-linux-beta-ubuntu-32&amp;quot;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Command များအသုံးပြုရာတွင် &lt;code&gt;-&lt;/code&gt;, &lt;code&gt;--&lt;/code&gt;, နှင့် Space တို့ကို အထူးကရုပြုရမည်ဖြစ်ပြီး လွဲချော်နေပါက ထို Command အလုပ်လုပ်မည်မဟုတ်ပါ။&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>vFix - Fix Virus Infected Flash Drives</title>
      <link>http://naingyeminn.com/posts/vfix-fix-virus-infected-flash-drives/</link>
      <pubDate>Mon, 23 Jun 2014 00:00:00 UTC</pubDate>
      
      <guid>http://naingyeminn.com/posts/vfix-fix-virus-infected-flash-drives/</guid>
      <description>&lt;p&gt;ရုံးမှာ တစ်ခါတစ်ခါ Virus ဝင်ထားတဲ့ Flash Drive တွေ ယူယူလာ Data တွေမတွေ့တော့လို့ဆိုပြီး လာပြလေ့ရှိပါတယ်။ များသောအားဖြင့် Windows Virus တွေက Flash Drive ကနေပဲ ကူးကြတာများပါတယ်။ ကူးပြီဆိုရင်လဲ Drive ထဲရှိတဲ့ Folder တွေကို Hidden လုပ် Folder နဲ့ နာမည်တူ Link တွေထုတ်ပြီး virus file ကိုသွားချိတ်လေ့ရှိပါတယ်။ Windows မှာရှိတဲ့ Antivirus က Virus ကိုရှင်လိုက်နိုင်တယ်ဆိုရင်တောင် အဲဒီ Virus က Hidden လုပ်သွားတဲ့ Flash Drive ထဲက Folder တွေကိုတော့ ပြန်ဖေါ်ပေးလေ့မရှိပါဘူး။&lt;/p&gt;

&lt;p&gt;အကယ်၍များ Linux မှာ အဲ့ Drive ကိုသွားသုံးမယ်ဆိုရင်တော့ Hidden ဖြစ်နေတဲ့ Folder တွေကိုမြင်ရပါလိမ့်မယ်။ Drive ထဲ Virus ရှိနေသေးတယ်ဆိုရင်တောင် အဲဒီ Windows က Virus တွေက Linux ပေါ်မှာအလုပ်မလုပ်ပါဘူး။ လိုတာက အဲဒီ Virus ဖိုင်( .exe, .bat) စတာတွေကို ကိုယ်တိုင် delete လုပ်ေပးဖို့ပါပဲ။ နောက်ပြီး Hidden တွေကို ပြန်ေဖာ်တာ virus ကလုပ်သွားတဲ့ Shortcut (.lnk) File တွေကိုပြန်ဖျက်တာတွေ လုပ်ပေးရပါတယ်။ ဒါပေမယ့် Windows File System အရ Hidden လုပ်ထားတဲ့ Folder တွေကို ပြန်ဖော်ပေးဖို့အတွက် Ubuntu မှာတော့ package တချို့ ထပ်တင်ရပါတယ်။ နောက်ပြီး Terminal ကနေ command နဲ့ Folder တွေတစ်ခုချင်း လိုက်ပြီး Hidden attribute လိုက်ဖြုတ်ပေးရပါတယ်။ Windows ပေါ်မှာ တော့ cmd ထဲဝင် &amp;ldquo;attrib -s -h folder_name&amp;rdquo; ဆိုပြီး ပြန်ေဖာ်ပေးလို့ ရပါတယ်။&lt;/p&gt;

&lt;p&gt;ခက်တာက Folder အရမ်းများတာ၊ Sub-Folder တွေပါ Hidden ဖြစ်နေတာဆိုရင် ပြန်ေဖာ်ရတာ လက်ဝင်ပါတယ်။ Windows မှာ Batch တို့ VBScript တို့သုံးပြီး ဒီပြဿနာကို ရှင်းလို့ ရကောင်းရနိုင်ပါလိမ့်မယ်။ ဒါပေမယ့် Linux ပဲသုံးတဲ့သူတွေအတွက်တော့ အခုလို Virus ပြဿနာအတွက် အကူအညီလာတောင်းရင် အလွယ်တကူ ရှင်းပေးနိုင်အောင် ရည်ရွယ်ပြီး ဒီ Script လေးရေးဖြစ်သွားတာပါ။ ကိုယ်တိုင်လဲ အမြဲကြုံနေရတော့ command တွေအခါခါရိုက်ပြီး ရှင်းပေးနေရာတာ အချိန်ကုန်တာကြောင့်လဲ ပါပါတယ်။&lt;/p&gt;

&lt;p&gt;Ubuntu မှာ vFix ကို သုံးဖို့ attr နဲ့ fatattr ဆိုတဲ့ package တွေလိုပါတယ်။ vFix install လုပ်တဲ့အချိန် တပါတည်း install လုပ်သွားပါလိမ့်မယ်။ အဲဒီအတွက် internet connection ရှိနေဖို့တော့လိုပါတယ်။ Install လုပ်ဖို့ အတွက်&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/naingyeminn/vFix/archive/master.zip&#34;&gt;vFix&lt;/a&gt; zip file ကို Download လုပ်ပါ။&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ wget https://github.com/naingyeminn/vFix/archive/master.zip -O vFix.zip
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;ရလာတဲ့ vFix.zip ကို extract လုပ်ပါ။&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ unzip vFix.zip
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;Extract လုပ်ထားတဲ့ Directory ထဲ ကို Terminal ကနေဝင်ပါ။&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ cd vFix-master
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;နောက်ဆုံးအနေနဲ့ make command ကို root permission နဲ့ run ပေးရုံပါပဲ။&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ sudo make
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;သုံးပုံ သုံးနည်းကတော့ Fix လုပ်ချင်တဲ့ Flash Drive ကို တပ်ပြီး mount လုပ်လိုက်ပါ။ ပြီးရင်တော့ vfix ဆိုတဲ့ command နဲ့သုံးပြီး fix လုပ်ရုံပါပဲ။&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ vfix /media/your_mounted_drive/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Or&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ cd /media/your_mounted_drive/
$ vfix
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;your_mounted_drive ဆိုတဲ့နေရာမှာက ကိုယ့် drive ရဲ့ name ကိုထည့်ရမှာပါ။ ပြန်ပြောရရင် ဒီ script က drive ထဲမှာရှိသမျှ folder တွေကို Hidden Attribute ဖြုတ်ပေးသွားမယ့်အပြင် မလိုအပ်တဲ့ .lnk file တွေ, autorun.inf နဲ့ RECYCLER folder တို့ကို ဖျက်ပေးသွားမှာပါ။ ဒါကြောင့် မိတ်ဆွေ သူငယ်ချင်း တစ်ယောက်ယောက်က သူ့ Flash Drive ကို virus ဝင်ထားလို့ folder တွေ ပျောက်နေတယ် ဆိုရင် ကိုယ့်ရဲ့ Ubuntu Linux မှာ ဒီ script လေးသုံးပြီး အလွယ်တကူ ဖြေရှင်းပေးနိုင်ပါကြောင်း မျှဝေလိုက်ရပါတယ်။&lt;/p&gt;

&lt;p&gt;###&lt;a href=&#34;https://github.com/naingyeminn/vFix&#34;&gt;vFix on GitHub&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>