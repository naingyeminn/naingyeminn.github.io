<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Terminal on Naing Ye` Minn</title>
    <link>http://naingyeminn.com/tags/terminal/</link>
    <description>Recent content in Terminal on Naing Ye` Minn</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 19 Feb 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://naingyeminn.com/tags/terminal/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>NTFS-3G for macOS</title>
      <link>http://naingyeminn.com/posts/ntfs-3g-for-macos/</link>
      <pubDate>Wed, 19 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>http://naingyeminn.com/posts/ntfs-3g-for-macos/</guid>
      <description>macOS ပေါ်မှာ External Hard Drive တွေ Thumb Drive တွေထဲ Data ကူးဖို့ကြိုးစားတဲ့အခါ ကူးထည့်လို့မရတဲ့ပြဿနာကြုံဖူးကြမယ်ထင်ပါတယ်။ အဓိကပြဿနာက Drive ကို Format ချတဲ့အခါ သုံးထားတဲ့ File System က Windows ရဲ့ NTFS File System ဖြစ်နေတဲ့အတွက် Read ပဲလုပ်လို့ရပြီး Write မရတာပါ။ NTFS မသုံးပဲ FAT32 တို့ ExFAT တို့ဆိုရင်တော့ အဆင်ပြေပါတယ်။ FAT32 ရဲ့ ကန့်သတ်ချက်က 4GB နဲ့အထက်ရှိတဲ့ File တွေဆိုရင်ကူးထည့်လို့မရတာပါ။ အဲဒီအတွက် macOS ပေါ်မှာ ExFAT နဲ့ Format ချပြီးသုံးနိုင်ပါတယ်။ ExFAT ကို Windows ကလည်း Read-Write လုပ်လို့ရသလို၊ Linux ပေါ်မှာဆိုရင်လည်း ဒီ File System format အတွက်လိုအပ်တဲ့ Package လေးသွင်းပြီးသုံးနိုင်ပါတယ်။
အဓိကပြဿနာက Windows User တွေက သူတို့ရဲ့ Drive တွေကို Format ချတဲ့နေရာမှာ ExFAT ကိုတကူးတကမရွေးပဲ Default ဖြစ်တဲ့ NTFS ကိုပဲသုံးလိုက်ကြတာများပါတယ်။ NTFS သုံးထားပြီးသား Drive တစ်ခုကို macOS ပေါ်မှာသုံးမယ်ဆိုရင် Read Only ပဲရပါလိမ့်မယ်။ Data မရှိသေးတဲ့ Drive ဆိုရင်တော့ ပြဿနာမရှိပါဘူး။ ExFAT နဲ့ Format ပြန်ချပြီး Data ကူးထည့်ပေးလိုက်လို့ရပါတယ်။ အကယ်၍ Data တွေရှိပြီးသား External HDD တွေထဲကို ကူထည့်ပေးဖို့ကျတော့ Format ပြန်ပြောင်းဖို့ဆိုတာအဆင်မပြေတော့ပါဘူး။ ဒါကြောင့် macOS ပေါ်မှာ NTFS ကို Write Access မရတာက တကယ်အရေးတကြီး File ကူးပေးဖို့လိုတဲ့အခါမျိုးမှာ မလိုအပ်ပဲကျန့်ကြာစေပါတယ်။</description>
    </item>
    
    <item>
      <title>Executing Commands Remotely via SSH</title>
      <link>http://naingyeminn.com/posts/executing-commands-remotely-via-ssh/</link>
      <pubDate>Wed, 28 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>http://naingyeminn.com/posts/executing-commands-remotely-via-ssh/</guid>
      <description>SSH ကို Remote Login အတွက် SysAdmin တိုင်းသုံးကြပါတယ်။ ဒါပေမဲ့ Remote Execution အတွက်တော့ သိပ်သုံးလေ့မရှိကြပါဘူး။ စာသင်တဲ့အခါ သင်တန်းသားတွေကိုမေးကြည့်တော့လည်း တချို့တွေက Remote Login လောက်ပဲသုံးဖူးကြတာတွေ့ရတဲ့အတွက်ဒီ Post လေးရေးဖြစ်သွားတာပါ။ Server ထဲကို SSH သုံးပြီး Login ဝင်၊ ပြီးမှ ကိုယ် run ချင်တဲ့ command run တာ၊ ပြင်ချင်တဲ့ config ပြင်တာတွေကို လုပ်ကြတာများပါတယ်။ အမှန်က သုံးချင်တဲ့ command ကို SSH ကနေတဆင့် တန်း run လို့ရပါတယ်။ ဥပမာ -
$ ssh user1@server1.example.com ls -l /  server1.example.com ဆိုတဲ့ server ထဲကို user1 ဆိုတဲ့ user account နဲ့ Login ဝင်ပြီး ls -l / ဆိုတဲ့ command ကို run တာမျိုးပါ။</description>
    </item>
    
    <item>
      <title>Udacity Downloader in Bash</title>
      <link>http://naingyeminn.com/posts/udacity-downloader-in-bash/</link>
      <pubDate>Wed, 05 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>http://naingyeminn.com/posts/udacity-downloader-in-bash/</guid>
      <description>ဘာရယ်တော့မဟုတ်ပါဘူး Udacity က Course တချို့ကို လေ့လာရင်း စိတ်ကူးပေါက်လို့ရေးထားတာပါ။ အမှန်တော့ Python နဲ့ရေးထားတဲ့ udacity-dl ရှိပြီးသားပါ။ သို့ပေမယ့် သုံးနေတဲ့စက်မှာ အဆင်မပြေဖြစ်နေတာနဲ့ Bash နဲ့ ပြန်ရေးကြည့်ဖြစ်သွားတာပါ။ အပြည့်အဝအသုံးချနိုင်တယ်ရယ်တော့မဟုတ်ပါဘူး။ Bash Scripting ကို စိတ်ဝင်စားသူတွေ၊ လေ့လာနေသူတွေအတွက် အထောက်အကူပြုလိုပြုငြား မျှဝေခြင်းသက်သက်သာဖြစ်ပါတယ်။
Download ရယူနိုင်တဲ့ Course တွေကိုတော့ https://www.udacity.com/wiki/downloads မှာကြည့်နိုင်ပါတယ်။ Course တိုင်းတော့ မဟုတ်ပါဘူး။ Course Material တွေကို zip ဖိုင်အနေနဲ့ ပြုလုပ်ပြီး တင်ပေးထားတဲ့ Course တွေအတွက်ပဲသုံးနိုင်တာပါ။ အသုံးများတဲ့အတွက် Server က Bot လို့သတ်မှတ်ပြီး Download ပိတ်ထားတာမျိုးလည်းကြုံနိုင်ပါတယ်။
Installer package အနေနဲ့ Github မှာ တင်ပေးထားပြီး အသုံးပြုပုံကိုတော့ README မှာရေးပေးထားပါတယ်။
#!/bin/bash dlist=(`curl -s -A &#39;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:40.</description>
    </item>
    
    <item>
      <title>Using SED Command</title>
      <link>http://naingyeminn.com/posts/using-sed-command/</link>
      <pubDate>Sun, 08 May 2016 00:00:00 +0000</pubDate>
      
      <guid>http://naingyeminn.com/posts/using-sed-command/</guid>
      <description>sed ဆိုတာ Stream Editor အတိုကောက်ပါ။ command တစ်ခုခုရဲ့ output text stream ကိုဖြစ်စေ၊ file ထဲက text တွေကိုဖြစ်စေ ရှာဖွေခြင်း၊ ပြင်ဆင်ခြင်းများပြုလုပ်နိုင်ပါတယ်။ grep, awk တို့နဲ့အမြဲတွဲသုံးလေ့ရှိပါတယ်။ sed ကိုလေ့လာဖို့ ထုံးစံအတိုင်း လိုအပ်တဲ့ဖိုင်လေးတစ်ခုပြုလုပ်ပါမယ်။
#Yangon Regions # Htaukkyant Mhawbi Hlegu Taikgyi Okkan Apyauk Htantabin Shwepyaytha HlaingTharyar DagonMyothit Thanlyin Kyauktan Thonegwa KhaYan Twante Kawthmu Kungyangon CocoIsland Yangon  ပေးထားတဲ့ Text ကို Text Editor တစ်ခုခုထဲ ကူးထည့်ပြီး ygn.txt နာမည်နဲ့ Desktop ပေါ်မှာ Save လုပ်လိုက်ပါ။
sed command ရဲ့ အခြေခံအသုံးပြုပုံကတော့ အောက်ပါအတိုင်းဖြစ်ပါတယ်။
sed [option] &#39;commands&#39; file_to_edit  အခု ygn.</description>
    </item>
    
    <item>
      <title>Using AWK Command</title>
      <link>http://naingyeminn.com/posts/using-awk-command/</link>
      <pubDate>Wed, 20 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>http://naingyeminn.com/posts/using-awk-command/</guid>
      <description>Text File ထဲက Content တွေကိုရှာဖွေတဲ့နေရာမှာ grep အပြင် နောက်ထပ်သုံးလေ့သုံးထရှိတာကတော့ awk ဖြစ်ပါတယ်။ Content ရှာတာခြင်တူပေမဲ့ Output ကို Delimiter (သတ်မှတ်ပိုင်းခြားသင်္ကေတ) သုံးပြီးလိုအပ်တဲ့အပိုင်းလောက်ပဲ ခွဲထုတ်ပြသပေးနိုင်တာ သူ့ရဲ့အားသာချက်တစ်ခုပါ။ Default Delimiter ကတော့ Space ဖြစ်ပါတယ်။ Space ခြားထားတဲ့နေရာတွေကနေပိုင်းခြားပြသပေးမှာဖြစ်ပါတယ်။ လက်တွေ့လေ့လာစမ်းသပ်နိုင်ဖို့ လိုအပ်တဲ့ နမူနာ ဖိုင်လေးတစ်ခုအလျှင်ဦးဆုံး ဖန်တီးပါမယ်။
အောက်မှာပေးထားတဲ့စာသားတွေကို နှစ်သက်ရာ Text Editor တစ်ခုခုထဲကူထည့်ပြီး awktest.txt ဆိုတဲ့နာမည်နဲ့ Desktop ပေါ်မှာ Save လုပ်လိုက်ပါ။
1 MaungMaung Yangon 2000Ks 2 KyawKyaw Bago 2500Ks 3 AyeAye Bago 2500Ks 4 AungAung Pyay 2000Ks 5 MaungHla Yangon 3000Ks 6 KoKo Yangon 3000Ks 7 AyeMaung Bagan 3500Ks  awk command မှာတော့ အပိုင်းသုံးပိုင်းရှိပါတယ်။ Pattern, Procedure နှင့် File တို့ပဲဖြစ်ပါတယ်။</description>
    </item>
    
    <item>
      <title>Using GREP Command</title>
      <link>http://naingyeminn.com/posts/using-grep-command/</link>
      <pubDate>Sun, 01 Nov 2015 00:00:00 +0000</pubDate>
      
      <guid>http://naingyeminn.com/posts/using-grep-command/</guid>
      <description>Unix/Linux ကိုလေ့လာနေသူတွေအနေနဲ့ မသိမဖြစ်တဲ့ Command လေးတစ်ခုပါ။ Text File, Config File, Log File နှင့် Command တစ်ခုကနေထွက်လာတဲ့ Output စတာတွေထဲကမှ လိုအပ်တဲ့ information ကို ရှာဖွေထုတ်ယူတဲ့အခါမျိုးမှာ သုံးလေ့ရှိပါတယ်။ ဘယ်လောက်ထိ အသုံးဝင်၊ အသုံးတည့်တယ်ဆိုတာကတော့ အသုံးချမှုပေါ်မူတည်ပါလိမ့်မယ်။ လေ့လာရလွယ်ကူစေဖို့အတွက် lab environment တစ်ခုပြုလုပ်ကြပါမယ်။ ဒီ Post မှာတော့ Mac OS X အသုံးပြုပြီး ပြပေးထားတာပါ။ ဒါပေမယ့် Linux မှာလည်း အတူတူပါပဲ။
အလျှင်ဦးဆုံး Text Editor တစ်ခုခုသုံးပြီး အောက်မှာ ဖော်ပြထားတဲ့ စာသားတွေပါဝင်တဲ့ Text File တစ်ခုကို Desktop ပေါ်မှာတည်ဆောက်လိုက်ပါ။ File Name ကိုတော့ grep_demo.txt လို့ပေးပြီး Save လုပ်လိုက်ပါ။
a quick brown fox jumps over the lazy dog. A QUICK BROWN FOX JUMPS OVER THE LAZY DOG.</description>
    </item>
    
    <item>
      <title>Reading Man Page</title>
      <link>http://naingyeminn.com/posts/reading-man-page/</link>
      <pubDate>Wed, 02 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>http://naingyeminn.com/posts/reading-man-page/</guid>
      <description>Unix/Linux Admin တစ်ယောက်အနေနဲ့ ရပ်တည်ဖို့ဆိုလျှင် Terminal နဲ့ Command တွေကိုကောင်းကောင်းသုံးတတ်ဖို့လိုတယ်ဆိုတာ အားလုံးသိကြမှာပါ။ သို့ပေမယ့် အရှိန်အဟုန်နဲ့ တိုးတက်နေတဲ့ နည်းပညာခေတ်ကြီးမှာ အသစ်ထွက်သမျှ Program တွေ၊ အဲဒီ Program တွေရဲ့ Command တွေကို အကုန်သိ၊ အကုန်မှတ်မိနေဖို့ဆိုတာ ခက်ခဲလွန်းပါတယ်။ အလွတ်ကျက်ပြီး မှတ်ထားတယ်ဆိုလျှင်တောင်မှ နောင်ထွက်လာတဲ့ Version အသစ်မှာ Option တွေ Usage တွေ ပြောင်းသွားနိုင်ပါတယ်။ အဲဒီအခါမျိုးကျ ပြန်လည်မှတ်သားဖို့လိုပါလိမ့်မယ်။ အလွယ်ဆုံးနဲ့ အမြန်ဆုံး လေ့လာနိုင်မယ့်နည်းလမ်းကတော့ Man Page လို့ခေါ်တဲ့ Manual Page ပါပဲ။
Man Page တနည်းအားဖြင့် man ဆိုတဲ့ command ကို Unix/Linux Distro တိုင်းလိုလိုမှာ Install လုပ်လိုက်တာနဲ့ တခါတည်း ပါဝင်လာပြီးသားပါ။ man ရဲ့ အဓိကလုပ်ဆောင်ချက်ကတော့ Developer တွေ သူတို့ Program တွေနဲ့ တပါတည်း ရေးသားပြစုထည့်သွင်းပေးလိုက်တဲ့ Documentation ဖိုင်တွေကို ထုတ်ယူဖော်ပြပေးတာပါပဲ။ ဒီလို Program တွေ Command တွေအတွက် Documentation တွေပြုလုပ်တဲ့နေရာမှာ စံအနေနဲ့ အကြောင်းအရာအလိုက် Section Number ခွဲခြားသတ်မှတ်ပေးထားတာရှိပါတယ်။ အဲဒါတွေကတော့ -</description>
    </item>
    
    <item>
      <title>Find Command Usage</title>
      <link>http://naingyeminn.com/posts/find-command-usage/</link>
      <pubDate>Thu, 27 Aug 2015 00:00:00 +0000</pubDate>
      
      <guid>http://naingyeminn.com/posts/find-command-usage/</guid>
      <description>အခုနောက်ပိုင်း Linux မှာက GUI သုံးပြီးအလွယ်တကူ Search လုပ်လို့ရနေတော့ find ဆိုတဲ့ command ကို သိပ်မသုံးဖြစ်ကြပါဘူး။ သို့ပေမယ့် ပိုမိုတိကျတဲ့ result ရရှိဖို့အတွက်ကျတော့ find ကအရမ်းအသုံးဝင်ပါတယ်။ Linux Admin တွေအနေနဲ့ သိထားသင့်တဲ့ command လေးဖြစ်တဲ့အတွက် အသုံးပြုပုံတချို့ကို ဖော်ပြပေးလိုက်ပါတယ်။
File Name ဖြင့်ရှာဖွေခြင်း  /etc အောက်မှာရှိတဲ့ .conf နဲ့ဆုံးတဲ့ ဖိုင်တွေကိုပဲရှာချင်တယ်ဆိုလျှင်တော့  $ find /etc -name &amp;quot;*.conf&amp;quot;   command မှာပါတဲ့ * (Asterik) လေးကတော့ wildcard character ပါ။ .conf ရှေ့မှာ ဘာ character ရှိရှိလို့ ဆိုလိုခြင်းဖြစ်ပါတယ်။
  File name စာလုံး အကြီး၊ အသေး မရွေးစေချင်လျှင်တော့ -iname ဆိုတဲ့ option ကိုသုံးနိုင်ပါတယ်။ -name နဲ့ကွာခြားပုံကို အောက်မှာဖော်ပြထားတဲ့ နမူနာအတိုင်း စမ်းကြည့်နိုင်ပါတယ်။ -name option သုံးရင် hello ဆိုတဲ့တစ်ဖိုင်ပဲတွေ့ရမှာဖြစ်ပြီး -iname နဲ့ဆိုလျှင်တော့ ၃ ဖိုင်လုံးတွေ့ရပါလိမ့်မယ်။  $ mkdir testing $ cd testing $ touch hello HelloGuys HelloThere $ find .</description>
    </item>
    
    <item>
      <title>Linux Terminal / Command Line Tricks (2)</title>
      <link>http://naingyeminn.com/posts/linux-command-line-usage-2/</link>
      <pubDate>Tue, 04 Aug 2015 00:00:00 +0000</pubDate>
      
      <guid>http://naingyeminn.com/posts/linux-command-line-usage-2/</guid>
      <description>Linux/Unix ရဲ့ Bash Shell Terminal မှာ command တွေကို မြန်မြန်ဆန်ဆန် Edit လုပ်နိုင်စေမယ့် Shortcut လေးတွေပါ။ ရိုက်လိုက်တဲ့ command တစ်ကြောင်းမှာ အမှားပါနေလို့ပြန်ပြင်မယ်ဆိုရင် ကိုယ်တွေလုပ်နေကျ သမရိုးကျနည်းလမ်းအတိုင်း Arrow key တွေနဲ့ ရှေ့နောက်ရွှေ့ Delete, Backspace တို့နဲ့ပြန်ဖျက်၊ ပြန်ရေးနဲ့ အချိန်ကြာပါတယ်။ အခုထုတ်နှုတ်ပေးထားတဲ့ Shortcut လေးတွေသိထားမယ်ဆိုရင်တော့ command တွေကို မြန်မြန်ဆန်ဆန်ရိုက်နိုင် ပြင်နိုင်မှာဖြစ်တဲ့အတွက် အလုပ်ပိုတွင်ပါလိမ့်မယ်။ Linux/Unix Admin တွေအနေနဲ့ မဖြစ်မနေ သိထားသင့်တဲ့ Shortcut လေးတွေပဲဖြစ်ပါတယ်။
Command Editing Shortcuts  Control + a : Command အစသို့
 Control + e : Command အဆုံးသို့
 Control + k : Cursor နေရာမှစ၍ Command အဆုံးထိဖျက်</description>
    </item>
    
    <item>
      <title>NTFSX - Script to enable NTFS Write on Mac OS X</title>
      <link>http://naingyeminn.com/posts/script-to-enable-ntfs-write-on-mac-osx/</link>
      <pubDate>Fri, 06 Mar 2015 00:00:00 +0000</pubDate>
      
      <guid>http://naingyeminn.com/posts/script-to-enable-ntfs-write-on-mac-osx/</guid>
      <description>Mac OS X User တွေအနေနဲ့ External HDD တွေသုံးတဲ့နေရာမှာ ကြုံရလေ့ရှိတဲ့ အခက်အခဲလေးတစ်ခုပါ။ အဓိကအကြောင်းအရင်းကတော့ Windows ရဲ့ NTFS file system ကို Mac OS X က အပြည့်အဝ အထောက်အပံ့မပေးထားလို့ပါပဲ။ အဲဒါကြောင့် NTFS format သုံးထားတဲ့ External HDD တွေ USB Flash Drive တွေဆိုရင် Read Only သက်သက်သာ အသုံးပြုနိုင်ပါလိမ့်မယ်။ Data တွေကူးထည့်လို့မရနိုင်ပါဘူး။ ဒါပေမယ့် လုံးဝ Write Access မရတာတော့မဟုတ်ပါဘူး။ Mac OS X မှာက Native NTFS support ရှိပါတယ်။ ပြဿနာရှိတာက Apple အနေနဲ့ Microsoft ရဲ့ NTFS ကို Mac OS X မှာ အပြည့်အဝ အသုံးပြုနိုင်အောင် လုပ်ပေးမယ်ဆိုရင် Microsoft ဆီကနေ နည်းပညာ အသုံးပြုခွင့် ဝယ်ယူရပါလိမ့်မယ်။ Microsoft အနေနဲ့လည်း ထိုနည်းလည်ကောင်းပါပဲ။ Apple ရဲ့ HFS ကို Windows မှာအသုံးပြုလို့ရစေနိုင်ဖို့ အသုံးပြုခွင့် လိုအပ်ပါတယ်။ ဒါအမြင်သာဆုံးဖြစ်အောင်သာ နှိုင်းယှဉ်ပြတာပါ။ ဒီလို Patent ပြဿနာက တကယ့်တကယ် ဒီထက် ပိုရှုပ်ထွေးပါတယ်။ အဲဒီလို ညှိနှိုင်းရခက်ခဲတဲ့ ပြဿနာတွေကြောင့် Microsoft ကလည်း HFS ကို Support မလုပ်သလို Apple ကလည်း NTFS ကို လစ်လျှူရှုထားတာပါ။</description>
    </item>
    
    <item>
      <title>Password Manager in Shell Script</title>
      <link>http://naingyeminn.com/posts/password-manager-in-shell-script/</link>
      <pubDate>Sat, 21 Feb 2015 00:00:00 +0000</pubDate>
      
      <guid>http://naingyeminn.com/posts/password-manager-in-shell-script/</guid>
      <description>ယနေ့ခေတ် Internet အသုံးပြုမှုတွင်ကျယ်လာတာနဲ့အမျှ Google, Facebook, Twitter, Dropbox, Flickr, Instagram&amp;hellip; စသဖြင့် Account ပေါင်း သောင်းခြောက်ထောင်ရဲ့ Password တွေကို အကုန်မှတ်မိဖို့ဆိုတာမလွယ်ပါဘူး။ User Name တူအောင်ပေးထားရင်တောင် Password ကိုတော့ အတူတူမပေးသင့်တာ အားလုံးပဲသိကြမှာပါ။ Password တစ်ခုကို သိတာနဲ့ တခြား account တွေကိုပါဝင်လို့ရသွားနိုင်ပါတယ်။ နောက်ပြီး Password က ရိုးရှင်းနေလို့လဲမဖြစ်ပါဘူး။ လွယ်လွယ်ကူကူရိုးရိုးရှင်းရှင်းပေးထားရင် ကိုယ်ရိုက်လိုက်တဲ့ password ကို တခြားလူကစောင့်ကြည့်တာနဲ့တင် သိသွားနိုင်လို့ပါ။ စိတ်ချရအောင် ရှည်လျားပြီး ရှုပ်ထွေးတဲ့ password တွေကို ခဏခဏပြောင်းပြန်တော့လဲ အဲဒီ password တွေကို မှတ်မိဖို့က ခက်ခဲပါလိမ့်မယ်။ အဲဒါကြောင့် တချို့က Keypass လို password manager တစ်ခုခုသုံးကြပါတယ်။ Keepass က ကိုယ့်ရဲ့ password တွေကို Database တစ်ခုလုပ်ပြီး သိမ်းထားပေးတာပါ။ လိုအပ်ရင် အဲဒီ Database ကို Keypass နဲ့ဖွင့်ပြီး password ကို clipboard ထဲ အလွယ်တကူ copy ကူးထည့်ပေးပါတယ်။ နောက်ပြီး Password generate လုပ်ပေးတာတွေ password ကို သက်တမ်းသတ်မှတ်ပြီး အဲဒီသက်တမ်းကုန်တာနဲ့ ပြောင်းဖို့အသိပေးတာမျိုးတွေလည်း လုပ်ပေးနိုင်ပါသေးတယ်။ Windows User တွေအတွက်ကတော့ GUI Tool သုံးရတာနှစ်သက်ကြပေမယ့် တချို့ Linux, Mac OSX User တွေကတော့ CLI သုံးရတာကို ပိုပြီးနှစ်သက်ကြပါတယ်။ ကိုယ်တိုင်လဲ Password Manager သုံးချင်ပေမယ့် GUI သေသပ်မှုမရှိတဲ့ KeepassX ကို သိပ်မသုံးချင်ပါဘူး။ Terminal အသုံးများတဲ့သူတွေအတွက် Keepass application ကို သီးသန့်ထပ်ဖွင့်ပြီးသုံးတာထက် ဖွင့်ထားတဲ့ Terminal ကနေပဲ command ရိုက်ပြီး password ရှာတာကပို အဆင်ပြေပါလိမ့်မယ်။ Unix-liked OS တွေ အတွက် Pass ဆိုတဲ့ CLI tool ရှိပါတယ်။ စိတ်ချရပေမယ့် အနည်းငယ်ရှုပ်ထွေးပါတယ်။ လိုချင်တာက password တွေကို account ID နဲ့တွဲပြီး လွယ်လွယ်ကူကူသိမ်းနိုင်ဖို့ရယ် လွယ်လွယ်ကူကူ access လုပ်နိုင်ဖို့ရယ်ပါ။ ဒါကြောင့် ကိုယ်သိတဲ့ Bash နဲ့ပဲ Script လေးလုပ်ကြည့်ဖြစ်သွားပါတယ်။</description>
    </item>
    
    <item>
      <title>Linux Terminal / Command Line Tricks</title>
      <link>http://naingyeminn.com/posts/linux-command-line-usage/</link>
      <pubDate>Sun, 03 Aug 2014 00:00:00 +0000</pubDate>
      
      <guid>http://naingyeminn.com/posts/linux-command-line-usage/</guid>
      <description>Linux User တွေအနေနဲ့ သိထားသင့်တဲ့ Terminal အသုံးပြုပုံလေးတွေပါ။ အပြည့်အစုံကြီး မဟုတ်ပေမယ့် အသုံးဝင်တဲ့ နည်းလမ်းလေးတချို့ကိုပဲ အသုံးများတဲ့ Ubuntu ပေါ်အခြေခံပြီး အဓိကထားမျှဝေလိုက်ပါတယ်။
Shortcuts   Terminal အသစ်ဖွင့် Control + Alter + T   Tab အသစ်ဖွင့် Control + Shift + T   Zoom In (စာလုံးကြီး) Control + Shift + = (Control + +)   Zoom Out (စာလုံးသေး) Control + -   Copy Control + Shift + C   Paste Control + Shift + V   Command အစသို့ Control + A   Command ဖျက် Control + U</description>
    </item>
    
    <item>
      <title>Tips for Ubuntu-MM</title>
      <link>http://naingyeminn.com/posts/tips-for-ubuntu-mm/</link>
      <pubDate>Thu, 03 Jul 2014 00:00:00 +0000</pubDate>
      
      <guid>http://naingyeminn.com/posts/tips-for-ubuntu-mm/</guid>
      <description>$ Terminal မှ User ၏ Command Prompt ကိုဆိုလိုခြင်းဖြစ်သည်။ Online မှ Blog များ Tutorial များတွင် Command များကိုဖော်ပြရာ၌ ထည့်သွင်းဖော်ပြလေ့ရှိသည်။ သို့သော် ထို Command အား ကူးယူ အသုံးပြုရာတွင် ထည့်သွင်းအသုံးပြုစရာမလိုပါ။ $ sudo apt-get update ဟုဖော်ပြထားပါက sudo apt-get update ဆိုသော command သာကူယူအသုံးပြုရန်လိုအပ်သည်။
$ အား စာလုံးတစ်ချို့နှင့် ကပ်၍အသုံးပြုထားပါက shell variable အဖြစ် သတ်မှတ်ထားသည်ကို ပြန်လည်ခေါ်ယူ အသုံးပြုခြင်းဖြစ်သည်။
$ var=&amp;quot;Hello&amp;quot; $ echo $var Hello  အဆိုပါဥပမာရှိ line တစ်ခုချင်း၏ ရှေ့တွင်တွေ့ရသော $ သည် Command Prompt ကိုဆိုလိုခြင်းဖြစ်ပြီး ဒုတိယ line တွင်ပြထားသော $var သည် shell variable ကိုဆိုလိုခြင်းဖြစ်သည်။</description>
    </item>
    
    <item>
      <title>vFix - Fix Virus Infected Flash Drives</title>
      <link>http://naingyeminn.com/posts/vfix-fix-virus-infected-flash-drives/</link>
      <pubDate>Mon, 23 Jun 2014 00:00:00 +0000</pubDate>
      
      <guid>http://naingyeminn.com/posts/vfix-fix-virus-infected-flash-drives/</guid>
      <description>ရုံးမှာ တစ်ခါတစ်ခါ Virus ဝင်ထားတဲ့ Flash Drive တွေ ယူယူလာ Data တွေမတွေ့တော့လို့ဆိုပြီး လာပြလေ့ရှိပါတယ်။ များသောအားဖြင့် Windows Virus တွေက Flash Drive ကနေပဲ ကူးကြတာများပါတယ်။ ကူးပြီဆိုရင်လဲ Drive ထဲရှိတဲ့ Folder တွေကို Hidden လုပ် Folder နဲ့ နာမည်တူ Link တွေထုတ်ပြီး virus file ကိုသွားချိတ်လေ့ရှိပါတယ်။ Windows မှာရှိတဲ့ Antivirus က Virus ကိုရှင်လိုက်နိုင်တယ်ဆိုရင်တောင် အဲဒီ Virus က Hidden လုပ်သွားတဲ့ Flash Drive ထဲက Folder တွေကိုတော့ ပြန်ဖေါ်ပေးလေ့မရှိပါဘူး။
အကယ်၍များ Linux မှာ အဲ့ Drive ကိုသွားသုံးမယ်ဆိုရင်တော့ Hidden ဖြစ်နေတဲ့ Folder တွေကိုမြင်ရပါလိမ့်မယ်။ Drive ထဲ Virus ရှိနေသေးတယ်ဆိုရင်တောင် အဲဒီ Windows က Virus တွေက Linux ပေါ်မှာအလုပ်မလုပ်ပါဘူး။ လိုတာက အဲဒီ Virus ဖိုင်( .</description>
    </item>
    
  </channel>
</rss>