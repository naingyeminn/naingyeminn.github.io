<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
      <title>Server on Naing Ye` Minn </title>
    <link>http://naingyeminn.com/tags/server/</link>
    <language>en-us</language>
    <author>Naing Ye` Minn</author>
    <updated>2015-11-19 00:00:00 &#43;0000 UTC</updated>
    
    <item>
      <title>Local Tunnel</title>
      <link>http://naingyeminn.com/posts/localtunnel/</link>
      <pubDate>Thu, 19 Nov 2015 00:00:00 UTC</pubDate>
      <author>Naing Ye` Minn</author>
      <guid>http://naingyeminn.com/posts/localtunnel/</guid>
      <description>

&lt;p&gt;Web Application Development မှာ လေ့လာမိသလောက် Developer တွေအနေနဲ့ အများအားဖြင့် ကိုယ့်ရဲ့ Site/App ကို နမူနာပြချင်တယ်ဆိုလျှင် Meeting တစ်ခုလုပ် ဖို့ appointment ယူ၊ Client နဲ့တွေ့တဲ့အခါကျမှ ကိုယ့် Laptop မှာ Setup လုပ်ထားတဲ့ Web Server နဲ့ Run ပြကြတာများပါတယ်။ တချို့ကျတော့ Hosting/VPS Server ဝယ်ထားပြီး ကိုယ့်ရဲ့ Code ကို အဲဒီ Server ထဲ Upload လုပ်ပြီးတော့ Online တန်းပြတတ်ကြပါတယ်။ ဒီနည်းလမ်း ၂နည်းမှာ ပထမနည်းလမ်းအရ ပြင်ဆင်မှုတစ်ချို့အတွက် Client ရဲ့သဘောတူညီချက်ရဖို့အရေး Meeting လုပ်ဖို့ ချိန်းဆိုရ သွားရလာရနဲ့ အချိန်ပေးရပါတယ်။ ဒုတိယနည်းကျပြန်တော့ လည်း လုပ်ငန်းတွင်ပေမယ့် Server ကိုရင်းနှီးထားရပါတယ်။ ဒီအခက်အခဲတွေကို ဖြေရှင်းနိုင်ဖို့ကတော့ &lt;a href=&#34;http://localtunnel.me/&#34;&gt;localtunnel&lt;/a&gt; ကိုအသုံးပြုတဲ့နည်းလမ်းပါပဲ။&lt;/p&gt;

&lt;p&gt;&lt;code&gt;localtunnel&lt;/code&gt; ဆိုတာ NodeJS အသုံးပြုပြီးရေးသားထားတဲ့ Tunneling Service ပါ။ ပုံမှန်အတိုင်း Web Server တစ်ခုကို Access လုပ်ဖို့ဆိုလျှင် Public IP ရှိမှ Internet ကိုဖြတ်ပြီး Access လုပ်လို့ရပါတယ်။ အခု ဒီ &lt;code&gt;localtunnel&lt;/code&gt; ကတော့ Public IP မရှိဘဲ ကိုယ့် Laptop/Desktop မှာ setup လုပ်ထားတဲ့ Web Server ရဲ့ Site/App ကို Internet ကနေတဆင့် လှမ်းခေါ်ကြည့်ရှုနိုင်အောင်ဆောင်ရွက်ပေးတဲ့ Service လေးပါ။ &lt;code&gt;localtunnel&lt;/code&gt; ကိုသုံးဖို့ &lt;a href=&#34;https://nodejs.org/en/download/&#34;&gt;NodeJS&lt;/a&gt; ကို install လုပ်ထားရပါမယ်။ ပြီးလျှင်တော့ &lt;code&gt;npm&lt;/code&gt; (Node Package Manager) သုံးပြီး &lt;code&gt;localtunnel&lt;/code&gt; ရဲ့ Client Program ကို install ပြုလုပ်လိုက်ရုံပါပဲ။&lt;/p&gt;

&lt;hr /&gt;

&lt;h3 id=&#34;installation&#34;&gt;Installation&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ npm install -g localtunnel
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;usage&#34;&gt;Usage&lt;/h3&gt;

&lt;p&gt;အသုံးပြုပုံကတော့ ကိုယ့် Web Site/App ရဲ့ port number သုံးပြီး Service ကို Run ပေးရမှာပါ။ ဥပမာ ကိုယ့် Laptop/Desktop မှာ Develop လုပ်နေတဲ့ Site/App ကို &lt;code&gt;http://localhost&lt;/code&gt; လို့ခေါ်လိုက်တာနဲ့ တန်းမြင်ရတယ်ဆိုလျှင် -&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ lt --port 80
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ဆိုတဲ့ HTTP ရဲ့ Default Port (80) နဲ့ command ကို Run ပေးရမှာပါ။ အကယ်၍ &lt;code&gt;http://localhost:8080&lt;/code&gt; နဲ့ သုံးထားတယ်ဆိုလျှင်တော့ -&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ lt --port 8080
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Port Number : 8080 သုံးပြီး run ပေးရုံပါပဲ။&lt;/p&gt;

&lt;p&gt;Service စတင်လိုက်ပြီဆိုတာနဲ့ client program က &lt;code&gt;localtunnel.me&lt;/code&gt; ကိုလှမ်း Access လုပ်ပြီး ကိုယ့် Site/App အတွက် &lt;code&gt;https://zyxwvut.localtunnel.me&lt;/code&gt; ဆိုတာမျိုး Web URL တစ်ခုထုတ်ပေးပါလိမ့်မယ်။ အဲဒီ URL ကိုသုံးပြီး ကိုယ့်ရဲ့ Site/App ကို Internet ကနေတဆင့် Access လုပ်နိုင်မှာဖြစ်ပါတယ်။&lt;/p&gt;

&lt;h3 id=&#34;how-it-works&#34;&gt;How It Works&lt;/h3&gt;

&lt;p&gt;အလုပ်လုပ်ပုံကတော့ ပုံမှာပြထားတဲ့အတိုင်း Developer ကသူ့ Site/App ကို Run ထားပြီးပြီဆိုတာနဲ့ &lt;code&gt;localtunnel&lt;/code&gt; Client Program ကို run ပါတယ်။ Client Program က သူ့ရဲ့ Server ဖြစ်တဲ့ &lt;code&gt;localtunnel.me&lt;/code&gt; ကိုလှမ်း Access လုပ်ပြီး URL ကို Generate လုပ်ပေးပါတယ်။ ရလာတဲ့ URL ကို တဘက်မှာရှိတဲ့ Client(Customer) က သူ့ရဲ့ Web Browser ကနေ ခေါ်လိုက်ပြီဆိုတာနဲ့ &lt;code&gt;localtunnel.me&lt;/code&gt; Server ဆီကိုရောက်ပါတယ်။ &lt;code&gt;localtunnel.me&lt;/code&gt; ကိုရောက်လာတဲ့ Client Browser ရဲ့ HTTP Request ကို Developer ရဲ့ Laptop/Desktop မှာရှိတဲ့ &lt;code&gt;localtunnel&lt;/code&gt; Client Program က Respond ပြန်ပေးတာပါ။ အဲဒီ Request တွေ Respond တွေကို ကြားမှာရှိတဲ့ &lt;code&gt;localtunnel.me&lt;/code&gt; Server က Relay အနေနဲ့ အပြန်အလှန်ပို့ပေးတဲ့သဘောပါပဲ။&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/naingyeminn/nym_blog_data/master/Photos/localtunnel/localtunnel.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;ဒီ Service ကိုသုံးပြီး ရှေ့မှာပြောခဲ့သလို Developer တွေအနေနဲ့ ကိုယ့် Web Site/App ကို ကိုယ့်စက်မှာပဲ Host လုပ်ပြီး အဝေးတနေရာက Client ဆီ နမူနာအနေနဲ့ ပေးပို့ပြသချင်တဲ့အခါမျိုးမှာသုံးနိုင်တဲ့အပြင် SysAdmin တွေအနေနဲ့လည်း ရုံးချိန်ပြင်ပ ဒါမှမဟုတ် အဝေးတနေရာရောက်နေချိန် ကိုယ့် Local Server မှာ အရေးတကြီး ပြင်ဆင်စရာရှိလို့ Web-based Control Pannel ကိုဝင်ချင်တဲ့အခါ Junior တစ်ယောက်ယောက်ကို Client Program လေး Run ခိုင်းလိုက်ရုံနဲ့ ရောက်ရာနေရာကနေလှမ်း Access လုပ်လို့ရနိုင်မှာဖြစ်ပါတယ်။&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;tunnel&lt;/strong&gt; တိုင်းကို &lt;strong&gt;https&lt;/strong&gt; နဲ့သွားတာဖြစ်တဲ့အတွက် &lt;strong&gt;Secure&lt;/strong&gt; ဖြစ်တယ်ဆိုပေမယ့် တကယ့်ကို အရေးတကြီး လိုအပ်တဲ့အချိန်မှသုံးတာပိုစိတ်ချရပါတယ်။ နောက်ပြီး ဒီ Service က Free ဖြစ်တဲ့အတွက် အာမခံချက်မရှိပါဘူး။ Feature စုံစုံလင်လင်နဲ့ Performance ပိုကောင်းပြီး အာမခံချက်ရှိတဲ့ Service လိုချင်တယ်ဆိုလျှင်တော့ &lt;a href=&#34;https://ngrok.com&#34;&gt;Ngrok&lt;/a&gt; ရှိပါတယ်။ Commercial ဖြစ်ပြီး Plan အလိုက် Local Tunnel ပြုလုပ်တာထက်ပိုတဲ့ အခြား Feature တွေအသုံးပြုနိုင်မှာဖြစ်တဲ့အပြင် Free Service လည်းပေးထားပါသေးတယ်။ &lt;code&gt;Ngrok&lt;/code&gt; ရဲ့ အားသာချက်ကတော့ NodeJS မလိုပဲ Client Program ဖိုင်လေးတစ်ခုတည်းနဲ့တင် Run လို့ရတာပါ။ အသုံးပြုပုံကလည်း &lt;code&gt;localtunnel&lt;/code&gt; နဲ့သိပ်မကွာပါဘူး။ Functionality ပိုင်း ထပ်ဖြည့်ထားတာဖြစ်တဲ့အတွက် Option တွေပိုပါသွားတာလောက်ပါပဲ။&lt;/p&gt;

&lt;p&gt;&lt;code&gt;localtunnel&lt;/code&gt; ရဲ့ &lt;a href=&#34;https://github.com/localtunnel/localtunnel&#34;&gt;Client Source Code&lt;/a&gt; ရော &lt;a href=&#34;https://github.com/localtunnel/server&#34;&gt;Server Source Code&lt;/a&gt; ကိုပါ &lt;strong&gt;MIT License&lt;/strong&gt; နဲ့ပဲ မျှဝေပေးထားတာပါ။ ကိုယ်ပိုင် Server တည်ဆောက်ချင်သူတွေအနေနဲ့ လွတ်လပ်စွာ ရယူတည်ဆောက်နိုင်ပါတယ်။ အခြား Programming Language တွေနဲ့ ရေးသားထားတဲ့ အလားတူ Source Code တွေလည်း &lt;strong&gt;Github&lt;/strong&gt; မှာရှိပါသေးတယ်။ လူသိနည်းပေမယ့် အသုံးတည့်တဲ့ နည်ပညာလေးတစ်ခုဖြစ်တဲ့အတွက် မျှဝေလိုက်ရပါတယ်။&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Coloring Log Files</title>
      <link>http://naingyeminn.com/posts/coloring-log-files/</link>
      <pubDate>Wed, 14 Oct 2015 00:00:00 UTC</pubDate>
      <author>Naing Ye` Minn</author>
      <guid>http://naingyeminn.com/posts/coloring-log-files/</guid>
      <description>&lt;p&gt;Linux Administrator တွေအနေနဲ့ Log Analyzer တွေမျိုးစုံရှိနေပေမယ့် တစ်ခါတစ်ရံ လိုအပ်လို့ Log File တွေကိုမွှေနှောက်ရမယ်ဆိုလျှင် အာရုံနောက်ကြမယ်ထင်ပါတယ်။ Log File တွေရဲ့ထုံးစံအတိုင်း Text တွေကို ပြွပ်သိပ်နေအောင်ရိုက်ထုတ်ထားတာဖြစ်တဲ့အတွက် ဖတ်ရတဲ့သူအတွက် ဘယ်အပိုင်းက ဘာဆိုတာကို မနည်း အာရုံစိုက်ခွဲခြားနေရပါလိမ့်မယ်။ အဲဒီပြဿနာကိုတော့ &lt;strong&gt;CCZE&lt;/strong&gt; ကကူညီဖြေရှင်းပေးနိုင်ပါတယ်။ &lt;strong&gt;CCZE&lt;/strong&gt; ဆိုတာကတော့ command-line tool လေးတစ်ခုပဲဖြစ်ပါတယ်။ Linux Admin တွေအနေနဲ့ server ကို ssh နဲ့ access လုပ်နေတဲ့အချိန် Log File တွေကိုဖတ်ရှုဖို့လိုလာခဲ့မယ်ဆိုလျှင်တော့ ဒီ Tool လေးက အရမ်းအသုံးတည့်ပါတယ်။ Log ကိုသက်ဆိုင်ရာ အပိုင်းအခြားအလိုက် အရောင်ခွဲခြားပြီး ပြသပေးတာဖြစ်တဲ့အတွက် ဖတ်ရှုသူအနေနဲ့ မြန်ဆန်လွယ်ကူစွာ နားလည်သဘောပေါက်နိုင်မှာပါ။&lt;/p&gt;

&lt;p&gt;Debian/Ubuntu မှာတော့ -&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ sudo apt-get install -y ccze
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ဆိုပြီး Install တန်းလုပ်လို့ရပါတယ်။&lt;/p&gt;

&lt;p&gt;RHEL/CentOS/Fedora စတဲ့ Distro တွေမှာတော့ &lt;a href=&#34;http://naingyeminn.com/posts/epel-for-centos/&#34;&gt;EPEL&lt;/a&gt; ကနေ Install ပြုလုပ်နိုင်ပါတယ်။&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ sudo yum install -y ccze
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Install ပြုလုပ်ပြီးပြီဆိုလျှင်တော့ စသုံးလို့ရပါပြီ။ Command-line Tool ဆိုတဲ့အတိုင်း command တစ်ခုခုကနေထွက်လာတဲ့ output ကို &lt;strong&gt;pipe&lt;/strong&gt; &lt;code&gt;|&lt;/code&gt; သုံးပြီး &lt;code&gt;ccze&lt;/code&gt; ဆီကို ပို့ပေးလိုက်ရုံပါပဲ။ နမူနာအနေနဲ့ CentOS 7 ပေါ်မှာ အသုံးပြုပြပါမယ်။ အောက်ပါ Command နှစ်ကြောင်းကို Terminal မှာရိုက်ကြည့်လိုက်ပါ။&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ sudo tail -3 /var/log/messages
$ sudo tail -3 /var/log/messages | ccze -A
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ပုံမှာမြင်တွေ့ရတဲ့အတိုင်း Color ပါတာနဲ့ မပါတာကို ယှဉ်ပြီးတွေ့ရပါလိမ့်မယ်။&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/naingyeminn/nym_blog_data/master/Photos/ccze-A.png&#34; alt=&#34;ccze-A&#34; /&gt;&lt;/p&gt;

&lt;p&gt;နောက်ပြီး Log Output ကို HTML ဖိုင်အနေနဲ့လည်း ထုတ်ယူလို့ရပါသေးတယ်။&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ sudo tail -30 /var/log/messages | ccze -h &amp;gt; ~/Documents/msg.html
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Output ကိုတော့ User ရဲ့ Documents folder အောက်ထဲမှာ msg.html ဆိုပြီး HTML file အနေနဲ့တွေ့ရပါလိမ့်မယ်။ Double click နှိပ်ပြီး ဖွင့်ကြည့်လိုက်မယ်ဆိုလျှင်တော့ ပုံမှပြထားတဲ့အတိုင်း Browser မှာမြင်တွေ့ရပါလိမ့်မယ်။&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/naingyeminn/nym_blog_data/master/Photos/ccze-h.png&#34; alt=&#34;ccze-h&#34; /&gt;&lt;/p&gt;

&lt;p&gt;ပုံထဲမှာတော့ Default Color Scheme အတိုင်းဖြစ်နေတာရယ်၊ VM ပေါ်မှာဖြစ်တဲ့အတွက် Graphic Resolution နည်းနေတာရယ်တို့ကြောင့် ကြည့်ရတာတော့သိပ်အဆင်မပြေပါဘူး။ Default Color ကိုပြင်ချင်တယ်ဆိုလျှင်တော့ Config File &lt;code&gt;/etc/cczerc&lt;/code&gt; ထဲမှာ ဝင်ပြင်လို့ရပါတယ်။ HTML output ရဲ့ Background Color ကိုပြောင်းမယ်ဆိုလျှင်တော့ &lt;code&gt;/etc/cczerc&lt;/code&gt; ရဲ့ အောက်ဆုံး line number &lt;strong&gt;93&lt;/strong&gt; မှာရှိတဲ့ &lt;code&gt;cssbody #404040&lt;/code&gt; ကိုပြင်ရုံပါပဲ။ အခြား Color တွေကိုလည်း စိတ်ကြိုက်ပြင်ဆင်နိုင်ပါတယ်။&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/naingyeminn/nym_blog_data/master/Photos/ccze-h-safari.png&#34; alt=&#34;ccze-h&#34; /&gt;&lt;/p&gt;

&lt;p&gt;အပေါ်ပုံကတော့ &lt;code&gt;cssbody #000000&lt;/code&gt; ပြောင်းပြီး output ထုတ်ထားတဲ့ HTML ဖိုင်ကို Safari Browser ပေါ်မှာမြင်တွေ့ရတာပဲဖြစ်ပါတယ်။&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;CCZE&lt;/strong&gt; မှာ နောက်ထပ် Option တွေအများကြီးရှိပါသေးတယ်။ အသေးစိပ်ကိုတော့ &lt;a href=&#34;http://naingyeminn.com/posts/reading-man-page/&#34;&gt;man page&lt;/a&gt; သုံးပြီးလေ့လာနိုင်ပါတယ်။&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>EPEL for CentOS</title>
      <link>http://naingyeminn.com/posts/epel-for-centos/</link>
      <pubDate>Tue, 13 Oct 2015 00:00:00 UTC</pubDate>
      <author>Naing Ye` Minn</author>
      <guid>http://naingyeminn.com/posts/epel-for-centos/</guid>
      <description>

&lt;p&gt;EPEL ဆိုတာ Extra Packages for Enterprise Linux ရဲ့ အတိုကောက်ပါ။ Extra Packages ဆိုတဲ့အတိုင်း CentOS ရဲ့ Main Repository ထဲမပါဝင်ပေမယ့် အသုံးဝင်တဲ့ Package တွေကို စုစည်းပေးထားတဲ့ Repository တစ်ခုပါ။ Fedora Project ရဲ့ပံ့ပိုးမှုနဲ့ ဖြစ်ပေါ်လာတဲ့ Project တစ်ခုဖြစ်ပြီး Fedora Linux အတွက်တင်မဟုတ်ဘဲ Fedora-based ဖြစ်တဲ့ Red Hat Enterprise Linux နဲ့ တခြား မျိုးနွယ်တူ CentOS, Scientific Linux စတာတွေအတွက်ပါ Support ပေးထားတဲ့ Repo ပဲဖြစ်ပါတယ်။ အသေးစိပ်ကိုတော့ &lt;a href=&#34;https://fedoraproject.org/wiki/EPEL/FAQ&#34;&gt;EPEL/FAQ&lt;/a&gt; မှာလေ့လာနိုင်ပါတယ်။&lt;/p&gt;

&lt;p&gt;EPEL ထဲက package တွေကို Install ပြုလုပ်ချင်တယ်ဆိုလျှင်တော့ EPEL Repo ကို YUM Package Manager ရဲ့ Repo List ထဲမှာ ထပ်ထည့်ပြီး Enable ပြုလုပ်ပေးရပါမယ်။ အဲဒီအတွက် EPEL Package ကို Install လုပ်ရပါမယ်။ EPEL Package ကိုတော့ Distro Version ပေါ်မူတည်ပြီး Download ယူဖို့လိုပါတယ်။ Download အတွက် &lt;code&gt;wget&lt;/code&gt; command ကိုအသုံးပြုမှာဖြစ်တဲ့အတွက် ကြိုတင် Install လုပ်ထားဖို့လိုပါလိမ့်မယ်။&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ sudo yum install wget -y
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;RHEL/CentOS 5.x&lt;/strong&gt; အတွက်&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ wget https://dl.fedoraproject.org/pub/epel/epel-release-latest-5.noarch.rpm
$ sudo rpm -ivh epel-release-latest-5.noarch.rpm
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;RHEL/CentOS 6.x&lt;/strong&gt; အတွက်&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ wget https://dl.fedoraproject.org/pub/epel/epel-release-latest-6.noarch.rpm
$ sudo rpm -ivh epel-release-latest-6.noarch.rpm
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;RHEL/CentOS 7.x&lt;/strong&gt; အတွက်&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ wget https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
$ sudo rpm -ivh epel-release-latest-7.noarch.rpm
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;EPEL Repo&lt;/strong&gt; ရ၊ မရ ပြန်လည်စစ်ဆေးရန်အတွက်&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;$ yum repolist
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;screenshots&#34;&gt;Screenshots&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;CentOS 7 တွင် EPEL package အား &lt;code&gt;wget&lt;/code&gt; ဖြင့် Download ပြုလုပ်ခြင်း&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/naingyeminn/nym_blog_data/master/Photos/epel-wget.png&#34; alt=&#34;epel-wget&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Package အား Install ပြုလုပ်ခြင်း&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/naingyeminn/nym_blog_data/master/Photos/epel-install.png&#34; alt=&#34;epel-install&#34; /&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;EPEL Repo အား စစ်ဆေးခြင်း&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&#34;https://raw.githubusercontent.com/naingyeminn/nym_blog_data/master/Photos/epel-check.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;အပေါ်ပုံအတိုင်း EPEL ကို Repo List ထဲတွေ့ရပြီဆိုလျှင်တော့ EPEL Repo မှ Package များအား Install ပြုလုပ်နိုင်ပြီဖြစ်ပါတယ်။&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
